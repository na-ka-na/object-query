Grammar

    0 $accept: query "end of file"

    1 query: select_stmt from_stmt where_stmt group_by_stmt having_stmt order_by_stmt

    2 fn: "SUM"
    3   | "COUNT"

    4 fn_identifier: "identifier"
    5              | fn "(" fn_identifier ")"

    6 select_stmt: "SELECT" select_fields
    7            | "SELECT" "DISTINCT" select_fields

    8 select_fields: select_field
    9              | select_fields "," select_field

   10 select_field: "identifier"

   11 from_stmt: "FROM" "(" "string" "," "string" ")"

   12 where_stmt: %empty
   13           | "WHERE" boolean_expr

   14 boolean_expr: "(" boolean_expr ")"
   15             | boolean_expr "AND" boolean_expr
   16             | boolean_expr "OR" boolean_expr
   17             | expr "=" expr
   18             | expr ">" expr
   19             | expr "<" expr
   20             | expr ">=" expr
   21             | expr "<=" expr
   22             | expr "LIKE" expr

   23 expr: "(" expr ")"
   24     | expr "+" expr
   25     | expr "-" expr
   26     | expr "*" expr
   27     | expr "/" expr
   28     | "-" expr
   29     | fn_identifier
   30     | "long"
   31     | "double"
   32     | "string"

   33 group_by_stmt: %empty
   34              | "GROUP" "BY" group_by_fields

   35 group_by_fields: group_by_field
   36                | group_by_fields "," group_by_field

   37 group_by_field: "identifier"

   38 having_stmt: %empty
   39            | "HAVING" boolean_expr

   40 order_by_stmt: %empty
   41              | "ORDER" "BY" order_by_fields

   42 order_by_fields: order_by_field
   43                | order_by_fields "," order_by_field

   44 order_by_field: "identifier"


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"SELECT" (258) 6 7
"FROM" (259) 11
"WHERE" (260) 13
"GROUP" (261) 34
"HAVING" (262) 39
"ORDER" (263) 41
"BY" (264) 34 41
"," (265) 9 11 36 43
"+" (266) 24
"-" (267) 25 28
"*" (268) 26
"/" (269) 27
"=" (270) 17
"<" (271) 19
">" (272) 18
"<=" (273) 21
">=" (274) 20
"LIKE" (275) 22
"AND" (276) 15
"OR" (277) 16
"(" (278) 5 11 14 23
")" (279) 5 11 14 23
"SUM" (280) 2
"COUNT" (281) 3
"DISTINCT" (282) 7
"identifier" (283) 4 10 37 44
"string" (284) 11 32
"long" (285) 30
"double" (286) 31
UMINUS (287)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
query (34)
    on left: 1, on right: 0
fn (35)
    on left: 2 3, on right: 5
fn_identifier (36)
    on left: 4 5, on right: 5 29
select_stmt (37)
    on left: 6 7, on right: 1
select_fields (38)
    on left: 8 9, on right: 6 7 9
select_field (39)
    on left: 10, on right: 8 9
from_stmt (40)
    on left: 11, on right: 1
where_stmt (41)
    on left: 12 13, on right: 1
boolean_expr (42)
    on left: 14 15 16 17 18 19 20 21 22, on right: 13 14 15 16 39
expr (43)
    on left: 23 24 25 26 27 28 29 30 31 32, on right: 17 18 19 20 21
    22 23 24 25 26 27 28
group_by_stmt (44)
    on left: 33 34, on right: 1
group_by_fields (45)
    on left: 35 36, on right: 34 36
group_by_field (46)
    on left: 37, on right: 35 36
having_stmt (47)
    on left: 38 39, on right: 1
order_by_stmt (48)
    on left: 40 41, on right: 1
order_by_fields (49)
    on left: 42 43, on right: 41 43
order_by_field (50)
    on left: 44, on right: 42 43


State 0

    0 $accept: . query "end of file"
    1 query: . select_stmt from_stmt where_stmt group_by_stmt having_stmt order_by_stmt
    6 select_stmt: . "SELECT" select_fields
    7            | . "SELECT" "DISTINCT" select_fields

    "SELECT"  shift, and go to state 1

    query        go to state 2
    select_stmt  go to state 3


State 1

    6 select_stmt: "SELECT" . select_fields
    7            | "SELECT" . "DISTINCT" select_fields
    8 select_fields: . select_field
    9              | . select_fields "," select_field
   10 select_field: . "identifier"

    "DISTINCT"    shift, and go to state 4
    "identifier"  shift, and go to state 5

    select_fields  go to state 6
    select_field   go to state 7


State 2

    0 $accept: query . "end of file"

    "end of file"  shift, and go to state 8


State 3

    1 query: select_stmt . from_stmt where_stmt group_by_stmt having_stmt order_by_stmt
   11 from_stmt: . "FROM" "(" "string" "," "string" ")"

    "FROM"  shift, and go to state 9

    from_stmt  go to state 10


State 4

    7 select_stmt: "SELECT" "DISTINCT" . select_fields
    8 select_fields: . select_field
    9              | . select_fields "," select_field
   10 select_field: . "identifier"

    "identifier"  shift, and go to state 5

    select_fields  go to state 11
    select_field   go to state 7


State 5

   10 select_field: "identifier" .

    $default  reduce using rule 10 (select_field)


State 6

    6 select_stmt: "SELECT" select_fields .  ["FROM"]
    9 select_fields: select_fields . "," select_field

    ","  shift, and go to state 12

    $default  reduce using rule 6 (select_stmt)


State 7

    8 select_fields: select_field .

    $default  reduce using rule 8 (select_fields)


State 8

    0 $accept: query "end of file" .

    $default  accept


State 9

   11 from_stmt: "FROM" . "(" "string" "," "string" ")"

    "("  shift, and go to state 13


State 10

    1 query: select_stmt from_stmt . where_stmt group_by_stmt having_stmt order_by_stmt
   12 where_stmt: . %empty  ["end of file", "GROUP", "HAVING", "ORDER"]
   13           | . "WHERE" boolean_expr

    "WHERE"  shift, and go to state 14

    $default  reduce using rule 12 (where_stmt)

    where_stmt  go to state 15


State 11

    7 select_stmt: "SELECT" "DISTINCT" select_fields .  ["FROM"]
    9 select_fields: select_fields . "," select_field

    ","  shift, and go to state 12

    $default  reduce using rule 7 (select_stmt)


State 12

    9 select_fields: select_fields "," . select_field
   10 select_field: . "identifier"

    "identifier"  shift, and go to state 5

    select_field  go to state 16


State 13

   11 from_stmt: "FROM" "(" . "string" "," "string" ")"

    "string"  shift, and go to state 17


State 14

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   13 where_stmt: "WHERE" . boolean_expr
   14 boolean_expr: . "(" boolean_expr ")"
   15             | . boolean_expr "AND" boolean_expr
   16             | . boolean_expr "OR" boolean_expr
   17             | . expr "=" expr
   18             | . expr ">" expr
   19             | . expr "<" expr
   20             | . expr ">=" expr
   21             | . expr "<=" expr
   22             | . expr "LIKE" expr
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    boolean_expr   go to state 28
    expr           go to state 29


State 15

    1 query: select_stmt from_stmt where_stmt . group_by_stmt having_stmt order_by_stmt
   33 group_by_stmt: . %empty  ["end of file", "HAVING", "ORDER"]
   34              | . "GROUP" "BY" group_by_fields

    "GROUP"  shift, and go to state 30

    $default  reduce using rule 33 (group_by_stmt)

    group_by_stmt  go to state 31


State 16

    9 select_fields: select_fields "," select_field .

    $default  reduce using rule 9 (select_fields)


State 17

   11 from_stmt: "FROM" "(" "string" . "," "string" ")"

    ","  shift, and go to state 32


State 18

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   28     | "-" . expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    expr           go to state 34


State 19

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   14 boolean_expr: . "(" boolean_expr ")"
   14             | "(" . boolean_expr ")"
   15             | . boolean_expr "AND" boolean_expr
   16             | . boolean_expr "OR" boolean_expr
   17             | . expr "=" expr
   18             | . expr ">" expr
   19             | . expr "<" expr
   20             | . expr ">=" expr
   21             | . expr "<=" expr
   22             | . expr "LIKE" expr
   23 expr: . "(" expr ")"
   23     | "(" . expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    boolean_expr   go to state 35
    expr           go to state 36


State 20

    2 fn: "SUM" .

    $default  reduce using rule 2 (fn)


State 21

    3 fn: "COUNT" .

    $default  reduce using rule 3 (fn)


State 22

    4 fn_identifier: "identifier" .

    $default  reduce using rule 4 (fn_identifier)


State 23

   32 expr: "string" .

    $default  reduce using rule 32 (expr)


State 24

   30 expr: "long" .

    $default  reduce using rule 30 (expr)


State 25

   31 expr: "double" .

    $default  reduce using rule 31 (expr)


State 26

    5 fn_identifier: fn . "(" fn_identifier ")"

    "("  shift, and go to state 37


State 27

   29 expr: fn_identifier .

    $default  reduce using rule 29 (expr)


State 28

   13 where_stmt: "WHERE" boolean_expr .  ["end of file", "GROUP", "HAVING", "ORDER"]
   15 boolean_expr: boolean_expr . "AND" boolean_expr
   16             | boolean_expr . "OR" boolean_expr

    "AND"  shift, and go to state 38
    "OR"   shift, and go to state 39

    $default  reduce using rule 13 (where_stmt)


State 29

   17 boolean_expr: expr . "=" expr
   18             | expr . ">" expr
   19             | expr . "<" expr
   20             | expr . ">=" expr
   21             | expr . "<=" expr
   22             | expr . "LIKE" expr
   24 expr: expr . "+" expr
   25     | expr . "-" expr
   26     | expr . "*" expr
   27     | expr . "/" expr

    "+"     shift, and go to state 40
    "-"     shift, and go to state 41
    "*"     shift, and go to state 42
    "/"     shift, and go to state 43
    "="     shift, and go to state 44
    "<"     shift, and go to state 45
    ">"     shift, and go to state 46
    "<="    shift, and go to state 47
    ">="    shift, and go to state 48
    "LIKE"  shift, and go to state 49


State 30

   34 group_by_stmt: "GROUP" . "BY" group_by_fields

    "BY"  shift, and go to state 50


State 31

    1 query: select_stmt from_stmt where_stmt group_by_stmt . having_stmt order_by_stmt
   38 having_stmt: . %empty  ["end of file", "ORDER"]
   39            | . "HAVING" boolean_expr

    "HAVING"  shift, and go to state 51

    $default  reduce using rule 38 (having_stmt)

    having_stmt  go to state 52


State 32

   11 from_stmt: "FROM" "(" "string" "," . "string" ")"

    "string"  shift, and go to state 53


State 33

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   23 expr: . "(" expr ")"
   23     | "(" . expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    expr           go to state 54


State 34

   24 expr: expr . "+" expr
   25     | expr . "-" expr
   26     | expr . "*" expr
   27     | expr . "/" expr
   28     | "-" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "+", "-", "*", "/", "=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]

    $default  reduce using rule 28 (expr)

    Conflict between rule 28 and token "+" resolved as reduce ("+" < UMINUS).
    Conflict between rule 28 and token "-" resolved as reduce ("-" < UMINUS).
    Conflict between rule 28 and token "*" resolved as reduce ("*" < UMINUS).
    Conflict between rule 28 and token "/" resolved as reduce ("/" < UMINUS).


State 35

   14 boolean_expr: "(" boolean_expr . ")"
   15             | boolean_expr . "AND" boolean_expr
   16             | boolean_expr . "OR" boolean_expr

    "AND"  shift, and go to state 38
    "OR"   shift, and go to state 39
    ")"    shift, and go to state 55


State 36

   17 boolean_expr: expr . "=" expr
   18             | expr . ">" expr
   19             | expr . "<" expr
   20             | expr . ">=" expr
   21             | expr . "<=" expr
   22             | expr . "LIKE" expr
   23 expr: "(" expr . ")"
   24     | expr . "+" expr
   25     | expr . "-" expr
   26     | expr . "*" expr
   27     | expr . "/" expr

    "+"     shift, and go to state 40
    "-"     shift, and go to state 41
    "*"     shift, and go to state 42
    "/"     shift, and go to state 43
    "="     shift, and go to state 44
    "<"     shift, and go to state 45
    ">"     shift, and go to state 46
    "<="    shift, and go to state 47
    ">="    shift, and go to state 48
    "LIKE"  shift, and go to state 49
    ")"     shift, and go to state 56


State 37

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
    5              | fn "(" . fn_identifier ")"

    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22

    fn             go to state 26
    fn_identifier  go to state 57


State 38

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   14 boolean_expr: . "(" boolean_expr ")"
   15             | . boolean_expr "AND" boolean_expr
   15             | boolean_expr "AND" . boolean_expr
   16             | . boolean_expr "OR" boolean_expr
   17             | . expr "=" expr
   18             | . expr ">" expr
   19             | . expr "<" expr
   20             | . expr ">=" expr
   21             | . expr "<=" expr
   22             | . expr "LIKE" expr
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    boolean_expr   go to state 58
    expr           go to state 29


State 39

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   14 boolean_expr: . "(" boolean_expr ")"
   15             | . boolean_expr "AND" boolean_expr
   16             | . boolean_expr "OR" boolean_expr
   16             | boolean_expr "OR" . boolean_expr
   17             | . expr "=" expr
   18             | . expr ">" expr
   19             | . expr "<" expr
   20             | . expr ">=" expr
   21             | . expr "<=" expr
   22             | . expr "LIKE" expr
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    boolean_expr   go to state 59
    expr           go to state 29


State 40

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   24     | expr "+" . expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    expr           go to state 60


State 41

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   25     | expr "-" . expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    expr           go to state 61


State 42

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   26     | expr "*" . expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    expr           go to state 62


State 43

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   27     | expr "/" . expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    expr           go to state 63


State 44

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   17 boolean_expr: expr "=" . expr
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    expr           go to state 64


State 45

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   19 boolean_expr: expr "<" . expr
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    expr           go to state 65


State 46

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   18 boolean_expr: expr ">" . expr
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    expr           go to state 66


State 47

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   21 boolean_expr: expr "<=" . expr
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    expr           go to state 67


State 48

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   20 boolean_expr: expr ">=" . expr
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    expr           go to state 68


State 49

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   22 boolean_expr: expr "LIKE" . expr
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"

    "-"           shift, and go to state 18
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    expr           go to state 69


State 50

   34 group_by_stmt: "GROUP" "BY" . group_by_fields
   35 group_by_fields: . group_by_field
   36                | . group_by_fields "," group_by_field
   37 group_by_field: . "identifier"

    "identifier"  shift, and go to state 70

    group_by_fields  go to state 71
    group_by_field   go to state 72


State 51

    2 fn: . "SUM"
    3   | . "COUNT"
    4 fn_identifier: . "identifier"
    5              | . fn "(" fn_identifier ")"
   14 boolean_expr: . "(" boolean_expr ")"
   15             | . boolean_expr "AND" boolean_expr
   16             | . boolean_expr "OR" boolean_expr
   17             | . expr "=" expr
   18             | . expr ">" expr
   19             | . expr "<" expr
   20             | . expr ">=" expr
   21             | . expr "<=" expr
   22             | . expr "LIKE" expr
   23 expr: . "(" expr ")"
   24     | . expr "+" expr
   25     | . expr "-" expr
   26     | . expr "*" expr
   27     | . expr "/" expr
   28     | . "-" expr
   29     | . fn_identifier
   30     | . "long"
   31     | . "double"
   32     | . "string"
   39 having_stmt: "HAVING" . boolean_expr

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "SUM"         shift, and go to state 20
    "COUNT"       shift, and go to state 21
    "identifier"  shift, and go to state 22
    "string"      shift, and go to state 23
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 26
    fn_identifier  go to state 27
    boolean_expr   go to state 73
    expr           go to state 29


State 52

    1 query: select_stmt from_stmt where_stmt group_by_stmt having_stmt . order_by_stmt
   40 order_by_stmt: . %empty  ["end of file"]
   41              | . "ORDER" "BY" order_by_fields

    "ORDER"  shift, and go to state 74

    $default  reduce using rule 40 (order_by_stmt)

    order_by_stmt  go to state 75


State 53

   11 from_stmt: "FROM" "(" "string" "," "string" . ")"

    ")"  shift, and go to state 76


State 54

   23 expr: "(" expr . ")"
   24     | expr . "+" expr
   25     | expr . "-" expr
   26     | expr . "*" expr
   27     | expr . "/" expr

    "+"  shift, and go to state 40
    "-"  shift, and go to state 41
    "*"  shift, and go to state 42
    "/"  shift, and go to state 43
    ")"  shift, and go to state 56


State 55

   14 boolean_expr: "(" boolean_expr ")" .

    $default  reduce using rule 14 (boolean_expr)


State 56

   23 expr: "(" expr ")" .

    $default  reduce using rule 23 (expr)


State 57

    5 fn_identifier: fn "(" fn_identifier . ")"

    ")"  shift, and go to state 77


State 58

   15 boolean_expr: boolean_expr . "AND" boolean_expr
   15             | boolean_expr "AND" boolean_expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", ")"]
   16             | boolean_expr . "OR" boolean_expr

    "OR"  shift, and go to state 39

    $default  reduce using rule 15 (boolean_expr)

    Conflict between rule 15 and token "AND" resolved as reduce (%left "AND").
    Conflict between rule 15 and token "OR" resolved as shift ("AND" < "OR").


State 59

   15 boolean_expr: boolean_expr . "AND" boolean_expr
   16             | boolean_expr . "OR" boolean_expr
   16             | boolean_expr "OR" boolean_expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]

    $default  reduce using rule 16 (boolean_expr)

    Conflict between rule 16 and token "AND" resolved as reduce ("AND" < "OR").
    Conflict between rule 16 and token "OR" resolved as reduce (%left "OR").


State 60

   24 expr: expr . "+" expr
   24     | expr "+" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "+", "-", "=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]
   25     | expr . "-" expr
   26     | expr . "*" expr
   27     | expr . "/" expr

    "*"  shift, and go to state 42
    "/"  shift, and go to state 43

    $default  reduce using rule 24 (expr)

    Conflict between rule 24 and token "+" resolved as reduce (%left "+").
    Conflict between rule 24 and token "-" resolved as reduce (%left "-").
    Conflict between rule 24 and token "*" resolved as shift ("+" < "*").
    Conflict between rule 24 and token "/" resolved as shift ("+" < "/").


State 61

   24 expr: expr . "+" expr
   25     | expr . "-" expr
   25     | expr "-" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "+", "-", "=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]
   26     | expr . "*" expr
   27     | expr . "/" expr

    "*"  shift, and go to state 42
    "/"  shift, and go to state 43

    $default  reduce using rule 25 (expr)

    Conflict between rule 25 and token "+" resolved as reduce (%left "+").
    Conflict between rule 25 and token "-" resolved as reduce (%left "-").
    Conflict between rule 25 and token "*" resolved as shift ("-" < "*").
    Conflict between rule 25 and token "/" resolved as shift ("-" < "/").


State 62

   24 expr: expr . "+" expr
   25     | expr . "-" expr
   26     | expr . "*" expr
   26     | expr "*" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "+", "-", "*", "/", "=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]
   27     | expr . "/" expr

    $default  reduce using rule 26 (expr)

    Conflict between rule 26 and token "+" resolved as reduce ("+" < "*").
    Conflict between rule 26 and token "-" resolved as reduce ("-" < "*").
    Conflict between rule 26 and token "*" resolved as reduce (%left "*").
    Conflict between rule 26 and token "/" resolved as reduce (%left "/").


State 63

   24 expr: expr . "+" expr
   25     | expr . "-" expr
   26     | expr . "*" expr
   27     | expr . "/" expr
   27     | expr "/" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "+", "-", "*", "/", "=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]

    $default  reduce using rule 27 (expr)

    Conflict between rule 27 and token "+" resolved as reduce ("+" < "/").
    Conflict between rule 27 and token "-" resolved as reduce ("-" < "/").
    Conflict between rule 27 and token "*" resolved as reduce (%left "*").
    Conflict between rule 27 and token "/" resolved as reduce (%left "/").


State 64

   17 boolean_expr: expr "=" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   24 expr: expr . "+" expr
   25     | expr . "-" expr
   26     | expr . "*" expr
   27     | expr . "/" expr

    "+"  shift, and go to state 40
    "-"  shift, and go to state 41
    "*"  shift, and go to state 42
    "/"  shift, and go to state 43

    $default  reduce using rule 17 (boolean_expr)


State 65

   19 boolean_expr: expr "<" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   24 expr: expr . "+" expr
   25     | expr . "-" expr
   26     | expr . "*" expr
   27     | expr . "/" expr

    "+"  shift, and go to state 40
    "-"  shift, and go to state 41
    "*"  shift, and go to state 42
    "/"  shift, and go to state 43

    $default  reduce using rule 19 (boolean_expr)


State 66

   18 boolean_expr: expr ">" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   24 expr: expr . "+" expr
   25     | expr . "-" expr
   26     | expr . "*" expr
   27     | expr . "/" expr

    "+"  shift, and go to state 40
    "-"  shift, and go to state 41
    "*"  shift, and go to state 42
    "/"  shift, and go to state 43

    $default  reduce using rule 18 (boolean_expr)


State 67

   21 boolean_expr: expr "<=" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   24 expr: expr . "+" expr
   25     | expr . "-" expr
   26     | expr . "*" expr
   27     | expr . "/" expr

    "+"  shift, and go to state 40
    "-"  shift, and go to state 41
    "*"  shift, and go to state 42
    "/"  shift, and go to state 43

    $default  reduce using rule 21 (boolean_expr)


State 68

   20 boolean_expr: expr ">=" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   24 expr: expr . "+" expr
   25     | expr . "-" expr
   26     | expr . "*" expr
   27     | expr . "/" expr

    "+"  shift, and go to state 40
    "-"  shift, and go to state 41
    "*"  shift, and go to state 42
    "/"  shift, and go to state 43

    $default  reduce using rule 20 (boolean_expr)


State 69

   22 boolean_expr: expr "LIKE" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   24 expr: expr . "+" expr
   25     | expr . "-" expr
   26     | expr . "*" expr
   27     | expr . "/" expr

    "+"  shift, and go to state 40
    "-"  shift, and go to state 41
    "*"  shift, and go to state 42
    "/"  shift, and go to state 43

    $default  reduce using rule 22 (boolean_expr)


State 70

   37 group_by_field: "identifier" .

    $default  reduce using rule 37 (group_by_field)


State 71

   34 group_by_stmt: "GROUP" "BY" group_by_fields .  ["end of file", "HAVING", "ORDER"]
   36 group_by_fields: group_by_fields . "," group_by_field

    ","  shift, and go to state 78

    $default  reduce using rule 34 (group_by_stmt)


State 72

   35 group_by_fields: group_by_field .

    $default  reduce using rule 35 (group_by_fields)


State 73

   15 boolean_expr: boolean_expr . "AND" boolean_expr
   16             | boolean_expr . "OR" boolean_expr
   39 having_stmt: "HAVING" boolean_expr .  ["end of file", "ORDER"]

    "AND"  shift, and go to state 38
    "OR"   shift, and go to state 39

    $default  reduce using rule 39 (having_stmt)


State 74

   41 order_by_stmt: "ORDER" . "BY" order_by_fields

    "BY"  shift, and go to state 79


State 75

    1 query: select_stmt from_stmt where_stmt group_by_stmt having_stmt order_by_stmt .

    $default  reduce using rule 1 (query)


State 76

   11 from_stmt: "FROM" "(" "string" "," "string" ")" .

    $default  reduce using rule 11 (from_stmt)


State 77

    5 fn_identifier: fn "(" fn_identifier ")" .

    $default  reduce using rule 5 (fn_identifier)


State 78

   36 group_by_fields: group_by_fields "," . group_by_field
   37 group_by_field: . "identifier"

    "identifier"  shift, and go to state 70

    group_by_field  go to state 80


State 79

   41 order_by_stmt: "ORDER" "BY" . order_by_fields
   42 order_by_fields: . order_by_field
   43                | . order_by_fields "," order_by_field
   44 order_by_field: . "identifier"

    "identifier"  shift, and go to state 81

    order_by_fields  go to state 82
    order_by_field   go to state 83


State 80

   36 group_by_fields: group_by_fields "," group_by_field .

    $default  reduce using rule 36 (group_by_fields)


State 81

   44 order_by_field: "identifier" .

    $default  reduce using rule 44 (order_by_field)


State 82

   41 order_by_stmt: "ORDER" "BY" order_by_fields .  ["end of file"]
   43 order_by_fields: order_by_fields . "," order_by_field

    ","  shift, and go to state 84

    $default  reduce using rule 41 (order_by_stmt)


State 83

   42 order_by_fields: order_by_field .

    $default  reduce using rule 42 (order_by_fields)


State 84

   43 order_by_fields: order_by_fields "," . order_by_field
   44 order_by_field: . "identifier"

    "identifier"  shift, and go to state 81

    order_by_field  go to state 85


State 85

   43 order_by_fields: order_by_fields "," order_by_field .

    $default  reduce using rule 43 (order_by_fields)
