Terminals unused in grammar

   "'"


Grammar

    0 $accept: query "end of file"

    1 query: select_stmt from_stmt where_stmt group_by_stmt having_stmt order_by_stmt

    2 fn: "SUM"
    3   | "COUNT"
    4   | "DISTINCT"

    5 fn_identifier: "identifier"
    6              | fn "(" fn_identifier ")"

    7 identifiers: fn_identifier
    8            | identifiers "," fn_identifier

    9 select_stmt: "SELECT" identifiers

   10 from_stmt: "FROM" "(" "identifier" "," "identifier" ")"

   11 where_stmt: %empty
   12           | "WHERE" boolean_expr

   13 boolean_expr: "(" boolean_expr ")"
   14             | boolean_expr "AND" boolean_expr
   15             | boolean_expr "OR" boolean_expr
   16             | expr "=" expr
   17             | expr ">" expr
   18             | expr "<" expr
   19             | expr ">=" expr
   20             | expr "<=" expr
   21             | expr "LIKE" expr

   22 expr: "(" expr ")"
   23     | expr "+" expr
   24     | expr "-" expr
   25     | expr "*" expr
   26     | expr "/" expr
   27     | "-" expr
   28     | fn_identifier
   29     | "long"
   30     | "double"

   31 group_by_stmt: %empty
   32              | "GROUP BY" identifiers

   33 having_stmt: %empty
   34            | "HAVING" boolean_expr

   35 order_by_stmt: %empty
   36              | "ORDER BY" identifiers


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"SELECT" (258) 9
"FROM" (259) 10
"WHERE" (260) 12
"GROUP BY" (261) 32
"HAVING" (262) 34
"ORDER BY" (263) 36
"," (264) 8 10
"+" (265) 23
"-" (266) 24 27
"*" (267) 25
"/" (268) 26
"=" (269) 16
"<" (270) 18
">" (271) 17
"<=" (272) 20
">=" (273) 19
"LIKE" (274) 21
"AND" (275) 14
"OR" (276) 15
"'" (277)
"(" (278) 6 10 13 22
")" (279) 6 10 13 22
"SUM" (280) 2
"COUNT" (281) 3
"DISTINCT" (282) 4
"identifier" (283) 5 10
"long" (284) 29
"double" (285) 30
UMINUS (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
query (33)
    on left: 1, on right: 0
fn (34)
    on left: 2 3 4, on right: 6
fn_identifier (35)
    on left: 5 6, on right: 6 7 8 28
identifiers (36)
    on left: 7 8, on right: 8 9 32 36
select_stmt (37)
    on left: 9, on right: 1
from_stmt (38)
    on left: 10, on right: 1
where_stmt (39)
    on left: 11 12, on right: 1
boolean_expr (40)
    on left: 13 14 15 16 17 18 19 20 21, on right: 12 13 14 15 34
expr (41)
    on left: 22 23 24 25 26 27 28 29 30, on right: 16 17 18 19 20 21
    22 23 24 25 26 27
group_by_stmt (42)
    on left: 31 32, on right: 1
having_stmt (43)
    on left: 33 34, on right: 1
order_by_stmt (44)
    on left: 35 36, on right: 1


State 0

    0 $accept: . query "end of file"
    1 query: . select_stmt from_stmt where_stmt group_by_stmt having_stmt order_by_stmt
    9 select_stmt: . "SELECT" identifiers

    "SELECT"  shift, and go to state 1

    query        go to state 2
    select_stmt  go to state 3


State 1

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
    7 identifiers: . fn_identifier
    8            | . identifiers "," fn_identifier
    9 select_stmt: "SELECT" . identifiers

    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7

    fn             go to state 8
    fn_identifier  go to state 9
    identifiers    go to state 10


State 2

    0 $accept: query . "end of file"

    "end of file"  shift, and go to state 11


State 3

    1 query: select_stmt . from_stmt where_stmt group_by_stmt having_stmt order_by_stmt
   10 from_stmt: . "FROM" "(" "identifier" "," "identifier" ")"

    "FROM"  shift, and go to state 12

    from_stmt  go to state 13


State 4

    2 fn: "SUM" .

    $default  reduce using rule 2 (fn)


State 5

    3 fn: "COUNT" .

    $default  reduce using rule 3 (fn)


State 6

    4 fn: "DISTINCT" .

    $default  reduce using rule 4 (fn)


State 7

    5 fn_identifier: "identifier" .

    $default  reduce using rule 5 (fn_identifier)


State 8

    6 fn_identifier: fn . "(" fn_identifier ")"

    "("  shift, and go to state 14


State 9

    7 identifiers: fn_identifier .

    $default  reduce using rule 7 (identifiers)


State 10

    8 identifiers: identifiers . "," fn_identifier
    9 select_stmt: "SELECT" identifiers .  ["FROM"]

    ","  shift, and go to state 15

    $default  reduce using rule 9 (select_stmt)


State 11

    0 $accept: query "end of file" .

    $default  accept


State 12

   10 from_stmt: "FROM" . "(" "identifier" "," "identifier" ")"

    "("  shift, and go to state 16


State 13

    1 query: select_stmt from_stmt . where_stmt group_by_stmt having_stmt order_by_stmt
   11 where_stmt: . %empty  ["end of file", "GROUP BY", "HAVING", "ORDER BY"]
   12           | . "WHERE" boolean_expr

    "WHERE"  shift, and go to state 17

    $default  reduce using rule 11 (where_stmt)

    where_stmt  go to state 18


State 14

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
    6              | fn "(" . fn_identifier ")"

    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7

    fn             go to state 8
    fn_identifier  go to state 19


State 15

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
    8 identifiers: identifiers "," . fn_identifier

    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7

    fn             go to state 8
    fn_identifier  go to state 20


State 16

   10 from_stmt: "FROM" "(" . "identifier" "," "identifier" ")"

    "identifier"  shift, and go to state 21


State 17

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   12 where_stmt: "WHERE" . boolean_expr
   13 boolean_expr: . "(" boolean_expr ")"
   14             | . boolean_expr "AND" boolean_expr
   15             | . boolean_expr "OR" boolean_expr
   16             | . expr "=" expr
   17             | . expr ">" expr
   18             | . expr "<" expr
   19             | . expr ">=" expr
   20             | . expr "<=" expr
   21             | . expr "LIKE" expr
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 23
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    boolean_expr   go to state 27
    expr           go to state 28


State 18

    1 query: select_stmt from_stmt where_stmt . group_by_stmt having_stmt order_by_stmt
   31 group_by_stmt: . %empty  ["end of file", "HAVING", "ORDER BY"]
   32              | . "GROUP BY" identifiers

    "GROUP BY"  shift, and go to state 29

    $default  reduce using rule 31 (group_by_stmt)

    group_by_stmt  go to state 30


State 19

    6 fn_identifier: fn "(" fn_identifier . ")"

    ")"  shift, and go to state 31


State 20

    8 identifiers: identifiers "," fn_identifier .

    $default  reduce using rule 8 (identifiers)


State 21

   10 from_stmt: "FROM" "(" "identifier" . "," "identifier" ")"

    ","  shift, and go to state 32


State 22

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   27     | "-" . expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    expr           go to state 34


State 23

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   13 boolean_expr: . "(" boolean_expr ")"
   13             | "(" . boolean_expr ")"
   14             | . boolean_expr "AND" boolean_expr
   15             | . boolean_expr "OR" boolean_expr
   16             | . expr "=" expr
   17             | . expr ">" expr
   18             | . expr "<" expr
   19             | . expr ">=" expr
   20             | . expr "<=" expr
   21             | . expr "LIKE" expr
   22 expr: . "(" expr ")"
   22     | "(" . expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 23
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    boolean_expr   go to state 35
    expr           go to state 36


State 24

   29 expr: "long" .

    $default  reduce using rule 29 (expr)


State 25

   30 expr: "double" .

    $default  reduce using rule 30 (expr)


State 26

   28 expr: fn_identifier .

    $default  reduce using rule 28 (expr)


State 27

   12 where_stmt: "WHERE" boolean_expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY"]
   14 boolean_expr: boolean_expr . "AND" boolean_expr
   15             | boolean_expr . "OR" boolean_expr

    "AND"  shift, and go to state 37
    "OR"   shift, and go to state 38

    $default  reduce using rule 12 (where_stmt)


State 28

   16 boolean_expr: expr . "=" expr
   17             | expr . ">" expr
   18             | expr . "<" expr
   19             | expr . ">=" expr
   20             | expr . "<=" expr
   21             | expr . "LIKE" expr
   23 expr: expr . "+" expr
   24     | expr . "-" expr
   25     | expr . "*" expr
   26     | expr . "/" expr

    "+"     shift, and go to state 39
    "-"     shift, and go to state 40
    "*"     shift, and go to state 41
    "/"     shift, and go to state 42
    "="     shift, and go to state 43
    "<"     shift, and go to state 44
    ">"     shift, and go to state 45
    "<="    shift, and go to state 46
    ">="    shift, and go to state 47
    "LIKE"  shift, and go to state 48


State 29

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
    7 identifiers: . fn_identifier
    8            | . identifiers "," fn_identifier
   32 group_by_stmt: "GROUP BY" . identifiers

    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7

    fn             go to state 8
    fn_identifier  go to state 9
    identifiers    go to state 49


State 30

    1 query: select_stmt from_stmt where_stmt group_by_stmt . having_stmt order_by_stmt
   33 having_stmt: . %empty  ["end of file", "ORDER BY"]
   34            | . "HAVING" boolean_expr

    "HAVING"  shift, and go to state 50

    $default  reduce using rule 33 (having_stmt)

    having_stmt  go to state 51


State 31

    6 fn_identifier: fn "(" fn_identifier ")" .

    $default  reduce using rule 6 (fn_identifier)


State 32

   10 from_stmt: "FROM" "(" "identifier" "," . "identifier" ")"

    "identifier"  shift, and go to state 52


State 33

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   22 expr: . "(" expr ")"
   22     | "(" . expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    expr           go to state 53


State 34

   23 expr: expr . "+" expr
   24     | expr . "-" expr
   25     | expr . "*" expr
   26     | expr . "/" expr
   27     | "-" expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY", "+", "-", "*", "/", "=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]

    $default  reduce using rule 27 (expr)

    Conflict between rule 27 and token "+" resolved as reduce ("+" < UMINUS).
    Conflict between rule 27 and token "-" resolved as reduce ("-" < UMINUS).
    Conflict between rule 27 and token "*" resolved as reduce ("*" < UMINUS).
    Conflict between rule 27 and token "/" resolved as reduce ("/" < UMINUS).


State 35

   13 boolean_expr: "(" boolean_expr . ")"
   14             | boolean_expr . "AND" boolean_expr
   15             | boolean_expr . "OR" boolean_expr

    "AND"  shift, and go to state 37
    "OR"   shift, and go to state 38
    ")"    shift, and go to state 54


State 36

   16 boolean_expr: expr . "=" expr
   17             | expr . ">" expr
   18             | expr . "<" expr
   19             | expr . ">=" expr
   20             | expr . "<=" expr
   21             | expr . "LIKE" expr
   22 expr: "(" expr . ")"
   23     | expr . "+" expr
   24     | expr . "-" expr
   25     | expr . "*" expr
   26     | expr . "/" expr

    "+"     shift, and go to state 39
    "-"     shift, and go to state 40
    "*"     shift, and go to state 41
    "/"     shift, and go to state 42
    "="     shift, and go to state 43
    "<"     shift, and go to state 44
    ">"     shift, and go to state 45
    "<="    shift, and go to state 46
    ">="    shift, and go to state 47
    "LIKE"  shift, and go to state 48
    ")"     shift, and go to state 55


State 37

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   13 boolean_expr: . "(" boolean_expr ")"
   14             | . boolean_expr "AND" boolean_expr
   14             | boolean_expr "AND" . boolean_expr
   15             | . boolean_expr "OR" boolean_expr
   16             | . expr "=" expr
   17             | . expr ">" expr
   18             | . expr "<" expr
   19             | . expr ">=" expr
   20             | . expr "<=" expr
   21             | . expr "LIKE" expr
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 23
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    boolean_expr   go to state 56
    expr           go to state 28


State 38

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   13 boolean_expr: . "(" boolean_expr ")"
   14             | . boolean_expr "AND" boolean_expr
   15             | . boolean_expr "OR" boolean_expr
   15             | boolean_expr "OR" . boolean_expr
   16             | . expr "=" expr
   17             | . expr ">" expr
   18             | . expr "<" expr
   19             | . expr ">=" expr
   20             | . expr "<=" expr
   21             | . expr "LIKE" expr
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 23
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    boolean_expr   go to state 57
    expr           go to state 28


State 39

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   23     | expr "+" . expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    expr           go to state 58


State 40

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   24     | expr "-" . expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    expr           go to state 59


State 41

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   25     | expr "*" . expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    expr           go to state 60


State 42

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   26     | expr "/" . expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    expr           go to state 61


State 43

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   16 boolean_expr: expr "=" . expr
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    expr           go to state 62


State 44

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   18 boolean_expr: expr "<" . expr
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    expr           go to state 63


State 45

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   17 boolean_expr: expr ">" . expr
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    expr           go to state 64


State 46

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   20 boolean_expr: expr "<=" . expr
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    expr           go to state 65


State 47

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   19 boolean_expr: expr ">=" . expr
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    expr           go to state 66


State 48

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   21 boolean_expr: expr "LIKE" . expr
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"

    "-"           shift, and go to state 22
    "("           shift, and go to state 33
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    expr           go to state 67


State 49

    8 identifiers: identifiers . "," fn_identifier
   32 group_by_stmt: "GROUP BY" identifiers .  ["end of file", "HAVING", "ORDER BY"]

    ","  shift, and go to state 15

    $default  reduce using rule 32 (group_by_stmt)


State 50

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
   13 boolean_expr: . "(" boolean_expr ")"
   14             | . boolean_expr "AND" boolean_expr
   15             | . boolean_expr "OR" boolean_expr
   16             | . expr "=" expr
   17             | . expr ">" expr
   18             | . expr "<" expr
   19             | . expr ">=" expr
   20             | . expr "<=" expr
   21             | . expr "LIKE" expr
   22 expr: . "(" expr ")"
   23     | . expr "+" expr
   24     | . expr "-" expr
   25     | . expr "*" expr
   26     | . expr "/" expr
   27     | . "-" expr
   28     | . fn_identifier
   29     | . "long"
   30     | . "double"
   34 having_stmt: "HAVING" . boolean_expr

    "-"           shift, and go to state 22
    "("           shift, and go to state 23
    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7
    "long"        shift, and go to state 24
    "double"      shift, and go to state 25

    fn             go to state 8
    fn_identifier  go to state 26
    boolean_expr   go to state 68
    expr           go to state 28


State 51

    1 query: select_stmt from_stmt where_stmt group_by_stmt having_stmt . order_by_stmt
   35 order_by_stmt: . %empty  ["end of file"]
   36              | . "ORDER BY" identifiers

    "ORDER BY"  shift, and go to state 69

    $default  reduce using rule 35 (order_by_stmt)

    order_by_stmt  go to state 70


State 52

   10 from_stmt: "FROM" "(" "identifier" "," "identifier" . ")"

    ")"  shift, and go to state 71


State 53

   22 expr: "(" expr . ")"
   23     | expr . "+" expr
   24     | expr . "-" expr
   25     | expr . "*" expr
   26     | expr . "/" expr

    "+"  shift, and go to state 39
    "-"  shift, and go to state 40
    "*"  shift, and go to state 41
    "/"  shift, and go to state 42
    ")"  shift, and go to state 55


State 54

   13 boolean_expr: "(" boolean_expr ")" .

    $default  reduce using rule 13 (boolean_expr)


State 55

   22 expr: "(" expr ")" .

    $default  reduce using rule 22 (expr)


State 56

   14 boolean_expr: boolean_expr . "AND" boolean_expr
   14             | boolean_expr "AND" boolean_expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY", "AND", ")"]
   15             | boolean_expr . "OR" boolean_expr

    "OR"  shift, and go to state 38

    $default  reduce using rule 14 (boolean_expr)

    Conflict between rule 14 and token "AND" resolved as reduce (%left "AND").
    Conflict between rule 14 and token "OR" resolved as shift ("AND" < "OR").


State 57

   14 boolean_expr: boolean_expr . "AND" boolean_expr
   15             | boolean_expr . "OR" boolean_expr
   15             | boolean_expr "OR" boolean_expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY", "AND", "OR", ")"]

    $default  reduce using rule 15 (boolean_expr)

    Conflict between rule 15 and token "AND" resolved as reduce ("AND" < "OR").
    Conflict between rule 15 and token "OR" resolved as reduce (%left "OR").


State 58

   23 expr: expr . "+" expr
   23     | expr "+" expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY", "+", "-", "=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]
   24     | expr . "-" expr
   25     | expr . "*" expr
   26     | expr . "/" expr

    "*"  shift, and go to state 41
    "/"  shift, and go to state 42

    $default  reduce using rule 23 (expr)

    Conflict between rule 23 and token "+" resolved as reduce (%left "+").
    Conflict between rule 23 and token "-" resolved as reduce (%left "-").
    Conflict between rule 23 and token "*" resolved as shift ("+" < "*").
    Conflict between rule 23 and token "/" resolved as shift ("+" < "/").


State 59

   23 expr: expr . "+" expr
   24     | expr . "-" expr
   24     | expr "-" expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY", "+", "-", "=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]
   25     | expr . "*" expr
   26     | expr . "/" expr

    "*"  shift, and go to state 41
    "/"  shift, and go to state 42

    $default  reduce using rule 24 (expr)

    Conflict between rule 24 and token "+" resolved as reduce (%left "+").
    Conflict between rule 24 and token "-" resolved as reduce (%left "-").
    Conflict between rule 24 and token "*" resolved as shift ("-" < "*").
    Conflict between rule 24 and token "/" resolved as shift ("-" < "/").


State 60

   23 expr: expr . "+" expr
   24     | expr . "-" expr
   25     | expr . "*" expr
   25     | expr "*" expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY", "+", "-", "*", "/", "=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]
   26     | expr . "/" expr

    $default  reduce using rule 25 (expr)

    Conflict between rule 25 and token "+" resolved as reduce ("+" < "*").
    Conflict between rule 25 and token "-" resolved as reduce ("-" < "*").
    Conflict between rule 25 and token "*" resolved as reduce (%left "*").
    Conflict between rule 25 and token "/" resolved as reduce (%left "/").


State 61

   23 expr: expr . "+" expr
   24     | expr . "-" expr
   25     | expr . "*" expr
   26     | expr . "/" expr
   26     | expr "/" expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY", "+", "-", "*", "/", "=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]

    $default  reduce using rule 26 (expr)

    Conflict between rule 26 and token "+" resolved as reduce ("+" < "/").
    Conflict between rule 26 and token "-" resolved as reduce ("-" < "/").
    Conflict between rule 26 and token "*" resolved as reduce (%left "*").
    Conflict between rule 26 and token "/" resolved as reduce (%left "/").


State 62

   16 boolean_expr: expr "=" expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY", "AND", "OR", ")"]
   23 expr: expr . "+" expr
   24     | expr . "-" expr
   25     | expr . "*" expr
   26     | expr . "/" expr

    "+"  shift, and go to state 39
    "-"  shift, and go to state 40
    "*"  shift, and go to state 41
    "/"  shift, and go to state 42

    $default  reduce using rule 16 (boolean_expr)


State 63

   18 boolean_expr: expr "<" expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY", "AND", "OR", ")"]
   23 expr: expr . "+" expr
   24     | expr . "-" expr
   25     | expr . "*" expr
   26     | expr . "/" expr

    "+"  shift, and go to state 39
    "-"  shift, and go to state 40
    "*"  shift, and go to state 41
    "/"  shift, and go to state 42

    $default  reduce using rule 18 (boolean_expr)


State 64

   17 boolean_expr: expr ">" expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY", "AND", "OR", ")"]
   23 expr: expr . "+" expr
   24     | expr . "-" expr
   25     | expr . "*" expr
   26     | expr . "/" expr

    "+"  shift, and go to state 39
    "-"  shift, and go to state 40
    "*"  shift, and go to state 41
    "/"  shift, and go to state 42

    $default  reduce using rule 17 (boolean_expr)


State 65

   20 boolean_expr: expr "<=" expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY", "AND", "OR", ")"]
   23 expr: expr . "+" expr
   24     | expr . "-" expr
   25     | expr . "*" expr
   26     | expr . "/" expr

    "+"  shift, and go to state 39
    "-"  shift, and go to state 40
    "*"  shift, and go to state 41
    "/"  shift, and go to state 42

    $default  reduce using rule 20 (boolean_expr)


State 66

   19 boolean_expr: expr ">=" expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY", "AND", "OR", ")"]
   23 expr: expr . "+" expr
   24     | expr . "-" expr
   25     | expr . "*" expr
   26     | expr . "/" expr

    "+"  shift, and go to state 39
    "-"  shift, and go to state 40
    "*"  shift, and go to state 41
    "/"  shift, and go to state 42

    $default  reduce using rule 19 (boolean_expr)


State 67

   21 boolean_expr: expr "LIKE" expr .  ["end of file", "GROUP BY", "HAVING", "ORDER BY", "AND", "OR", ")"]
   23 expr: expr . "+" expr
   24     | expr . "-" expr
   25     | expr . "*" expr
   26     | expr . "/" expr

    "+"  shift, and go to state 39
    "-"  shift, and go to state 40
    "*"  shift, and go to state 41
    "/"  shift, and go to state 42

    $default  reduce using rule 21 (boolean_expr)


State 68

   14 boolean_expr: boolean_expr . "AND" boolean_expr
   15             | boolean_expr . "OR" boolean_expr
   34 having_stmt: "HAVING" boolean_expr .  ["end of file", "ORDER BY"]

    "AND"  shift, and go to state 37
    "OR"   shift, and go to state 38

    $default  reduce using rule 34 (having_stmt)


State 69

    2 fn: . "SUM"
    3   | . "COUNT"
    4   | . "DISTINCT"
    5 fn_identifier: . "identifier"
    6              | . fn "(" fn_identifier ")"
    7 identifiers: . fn_identifier
    8            | . identifiers "," fn_identifier
   36 order_by_stmt: "ORDER BY" . identifiers

    "SUM"         shift, and go to state 4
    "COUNT"       shift, and go to state 5
    "DISTINCT"    shift, and go to state 6
    "identifier"  shift, and go to state 7

    fn             go to state 8
    fn_identifier  go to state 9
    identifiers    go to state 72


State 70

    1 query: select_stmt from_stmt where_stmt group_by_stmt having_stmt order_by_stmt .

    $default  reduce using rule 1 (query)


State 71

   10 from_stmt: "FROM" "(" "identifier" "," "identifier" ")" .

    $default  reduce using rule 10 (from_stmt)


State 72

    8 identifiers: identifiers . "," fn_identifier
   36 order_by_stmt: "ORDER BY" identifiers .  ["end of file"]

    ","  shift, and go to state 15

    $default  reduce using rule 36 (order_by_stmt)
