Grammar

    0 $accept: query "end of file"

    1 query: select_stmt from_stmt where_stmt group_by_stmt having_stmt order_by_stmt

    2 fn1: "STR"
    3    | "INT"
    4    | "SUM"
    5    | "COUNT"

    6 fn3: "SUBSTR"

    7 select_stmt: "SELECT" select_fields
    8            | "SELECT" "DISTINCT" select_fields

    9 select_fields: select_field
   10              | select_fields "," select_field

   11 select_field: "identifier"

   12 from_stmt: "FROM" "(" "string" "," "string" ")"

   13 where_stmt: %empty
   14           | "WHERE" boolean_expr

   15 boolean_expr: "(" boolean_expr ")"
   16             | boolean_expr "AND" boolean_expr
   17             | boolean_expr "OR" boolean_expr
   18             | expr "=" expr
   19             | expr "!=" expr
   20             | expr ">" expr
   21             | expr "<" expr
   22             | expr ">=" expr
   23             | expr "<=" expr
   24             | expr "LIKE" expr

   25 expr: "(" expr ")"
   26     | expr "+" expr
   27     | expr "-" expr
   28     | expr "*" expr
   29     | expr "/" expr
   30     | "-" expr
   31     | fn1 "(" expr ")"
   32     | fn3 "(" expr "," expr "," expr ")"
   33     | "identifier"
   34     | "string"
   35     | "long"
   36     | "double"

   37 group_by_stmt: %empty
   38              | "GROUP" "BY" group_by_fields

   39 group_by_fields: group_by_field
   40                | group_by_fields "," group_by_field

   41 group_by_field: "identifier"

   42 having_stmt: %empty
   43            | "HAVING" boolean_expr

   44 order_by_stmt: %empty
   45              | "ORDER" "BY" order_by_fields

   46 order_by_fields: order_by_field
   47                | order_by_fields "," order_by_field

   48 order_by_field: "identifier"


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"SELECT" (258) 7 8
"FROM" (259) 12
"WHERE" (260) 14
"GROUP" (261) 38
"HAVING" (262) 43
"ORDER" (263) 45
"BY" (264) 38 45
"," (265) 10 12 32 40 47
"+" (266) 26
"-" (267) 27 30
"*" (268) 28
"/" (269) 29
"=" (270) 18
"!=" (271) 19
"<" (272) 21
">" (273) 20
"<=" (274) 23
">=" (275) 22
"LIKE" (276) 24
"AND" (277) 16
"OR" (278) 17
"(" (279) 12 15 25 31 32
")" (280) 12 15 25 31 32
"DISTINCT" (281) 8
"identifier" (282) 11 33 41 48
"string" (283) 12 34
"long" (284) 35
"double" (285) 36
"STR" (286) 2
"INT" (287) 3
"SUM" (288) 4
"COUNT" (289) 5
"SUBSTR" (290) 6
UMINUS (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
query (38)
    on left: 1, on right: 0
fn1 (39)
    on left: 2 3 4 5, on right: 31
fn3 (40)
    on left: 6, on right: 32
select_stmt (41)
    on left: 7 8, on right: 1
select_fields (42)
    on left: 9 10, on right: 7 8 10
select_field (43)
    on left: 11, on right: 9 10
from_stmt (44)
    on left: 12, on right: 1
where_stmt (45)
    on left: 13 14, on right: 1
boolean_expr (46)
    on left: 15 16 17 18 19 20 21 22 23 24, on right: 14 15 16 17 43
expr (47)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36, on right: 18 19 20
    21 22 23 24 25 26 27 28 29 30 31 32
group_by_stmt (48)
    on left: 37 38, on right: 1
group_by_fields (49)
    on left: 39 40, on right: 38 40
group_by_field (50)
    on left: 41, on right: 39 40
having_stmt (51)
    on left: 42 43, on right: 1
order_by_stmt (52)
    on left: 44 45, on right: 1
order_by_fields (53)
    on left: 46 47, on right: 45 47
order_by_field (54)
    on left: 48, on right: 46 47


State 0

    0 $accept: . query "end of file"
    1 query: . select_stmt from_stmt where_stmt group_by_stmt having_stmt order_by_stmt
    7 select_stmt: . "SELECT" select_fields
    8            | . "SELECT" "DISTINCT" select_fields

    "SELECT"  shift, and go to state 1

    query        go to state 2
    select_stmt  go to state 3


State 1

    7 select_stmt: "SELECT" . select_fields
    8            | "SELECT" . "DISTINCT" select_fields
    9 select_fields: . select_field
   10              | . select_fields "," select_field
   11 select_field: . "identifier"

    "DISTINCT"    shift, and go to state 4
    "identifier"  shift, and go to state 5

    select_fields  go to state 6
    select_field   go to state 7


State 2

    0 $accept: query . "end of file"

    "end of file"  shift, and go to state 8


State 3

    1 query: select_stmt . from_stmt where_stmt group_by_stmt having_stmt order_by_stmt
   12 from_stmt: . "FROM" "(" "string" "," "string" ")"

    "FROM"  shift, and go to state 9

    from_stmt  go to state 10


State 4

    8 select_stmt: "SELECT" "DISTINCT" . select_fields
    9 select_fields: . select_field
   10              | . select_fields "," select_field
   11 select_field: . "identifier"

    "identifier"  shift, and go to state 5

    select_fields  go to state 11
    select_field   go to state 7


State 5

   11 select_field: "identifier" .

    $default  reduce using rule 11 (select_field)


State 6

    7 select_stmt: "SELECT" select_fields .  ["FROM"]
   10 select_fields: select_fields . "," select_field

    ","  shift, and go to state 12

    $default  reduce using rule 7 (select_stmt)


State 7

    9 select_fields: select_field .

    $default  reduce using rule 9 (select_fields)


State 8

    0 $accept: query "end of file" .

    $default  accept


State 9

   12 from_stmt: "FROM" . "(" "string" "," "string" ")"

    "("  shift, and go to state 13


State 10

    1 query: select_stmt from_stmt . where_stmt group_by_stmt having_stmt order_by_stmt
   13 where_stmt: . %empty  ["end of file", "GROUP", "HAVING", "ORDER"]
   14           | . "WHERE" boolean_expr

    "WHERE"  shift, and go to state 14

    $default  reduce using rule 13 (where_stmt)

    where_stmt  go to state 15


State 11

    8 select_stmt: "SELECT" "DISTINCT" select_fields .  ["FROM"]
   10 select_fields: select_fields . "," select_field

    ","  shift, and go to state 12

    $default  reduce using rule 8 (select_stmt)


State 12

   10 select_fields: select_fields "," . select_field
   11 select_field: . "identifier"

    "identifier"  shift, and go to state 5

    select_field  go to state 16


State 13

   12 from_stmt: "FROM" "(" . "string" "," "string" ")"

    "string"  shift, and go to state 17


State 14

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   14 where_stmt: "WHERE" . boolean_expr
   15 boolean_expr: . "(" boolean_expr ")"
   16             | . boolean_expr "AND" boolean_expr
   17             | . boolean_expr "OR" boolean_expr
   18             | . expr "=" expr
   19             | . expr "!=" expr
   20             | . expr ">" expr
   21             | . expr "<" expr
   22             | . expr ">=" expr
   23             | . expr "<=" expr
   24             | . expr "LIKE" expr
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1           go to state 29
    fn3           go to state 30
    boolean_expr  go to state 31
    expr          go to state 32


State 15

    1 query: select_stmt from_stmt where_stmt . group_by_stmt having_stmt order_by_stmt
   37 group_by_stmt: . %empty  ["end of file", "HAVING", "ORDER"]
   38              | . "GROUP" "BY" group_by_fields

    "GROUP"  shift, and go to state 33

    $default  reduce using rule 37 (group_by_stmt)

    group_by_stmt  go to state 34


State 16

   10 select_fields: select_fields "," select_field .

    $default  reduce using rule 10 (select_fields)


State 17

   12 from_stmt: "FROM" "(" "string" . "," "string" ")"

    ","  shift, and go to state 35


State 18

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   30     | "-" . expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 37


State 19

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   15 boolean_expr: . "(" boolean_expr ")"
   15             | "(" . boolean_expr ")"
   16             | . boolean_expr "AND" boolean_expr
   17             | . boolean_expr "OR" boolean_expr
   18             | . expr "=" expr
   19             | . expr "!=" expr
   20             | . expr ">" expr
   21             | . expr "<" expr
   22             | . expr ">=" expr
   23             | . expr "<=" expr
   24             | . expr "LIKE" expr
   25 expr: . "(" expr ")"
   25     | "(" . expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1           go to state 29
    fn3           go to state 30
    boolean_expr  go to state 38
    expr          go to state 39


State 20

   33 expr: "identifier" .

    $default  reduce using rule 33 (expr)


State 21

   34 expr: "string" .

    $default  reduce using rule 34 (expr)


State 22

   35 expr: "long" .

    $default  reduce using rule 35 (expr)


State 23

   36 expr: "double" .

    $default  reduce using rule 36 (expr)


State 24

    2 fn1: "STR" .

    $default  reduce using rule 2 (fn1)


State 25

    3 fn1: "INT" .

    $default  reduce using rule 3 (fn1)


State 26

    4 fn1: "SUM" .

    $default  reduce using rule 4 (fn1)


State 27

    5 fn1: "COUNT" .

    $default  reduce using rule 5 (fn1)


State 28

    6 fn3: "SUBSTR" .

    $default  reduce using rule 6 (fn3)


State 29

   31 expr: fn1 . "(" expr ")"

    "("  shift, and go to state 40


State 30

   32 expr: fn3 . "(" expr "," expr "," expr ")"

    "("  shift, and go to state 41


State 31

   14 where_stmt: "WHERE" boolean_expr .  ["end of file", "GROUP", "HAVING", "ORDER"]
   16 boolean_expr: boolean_expr . "AND" boolean_expr
   17             | boolean_expr . "OR" boolean_expr

    "AND"  shift, and go to state 42
    "OR"   shift, and go to state 43

    $default  reduce using rule 14 (where_stmt)


State 32

   18 boolean_expr: expr . "=" expr
   19             | expr . "!=" expr
   20             | expr . ">" expr
   21             | expr . "<" expr
   22             | expr . ">=" expr
   23             | expr . "<=" expr
   24             | expr . "LIKE" expr
   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr

    "+"     shift, and go to state 44
    "-"     shift, and go to state 45
    "*"     shift, and go to state 46
    "/"     shift, and go to state 47
    "="     shift, and go to state 48
    "!="    shift, and go to state 49
    "<"     shift, and go to state 50
    ">"     shift, and go to state 51
    "<="    shift, and go to state 52
    ">="    shift, and go to state 53
    "LIKE"  shift, and go to state 54


State 33

   38 group_by_stmt: "GROUP" . "BY" group_by_fields

    "BY"  shift, and go to state 55


State 34

    1 query: select_stmt from_stmt where_stmt group_by_stmt . having_stmt order_by_stmt
   42 having_stmt: . %empty  ["end of file", "ORDER"]
   43            | . "HAVING" boolean_expr

    "HAVING"  shift, and go to state 56

    $default  reduce using rule 42 (having_stmt)

    having_stmt  go to state 57


State 35

   12 from_stmt: "FROM" "(" "string" "," . "string" ")"

    "string"  shift, and go to state 58


State 36

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   25 expr: . "(" expr ")"
   25     | "(" . expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 59


State 37

   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr
   30     | "-" expr .  ["end of file", "GROUP", "HAVING", "ORDER", ",", "+", "-", "*", "/", "=", "!=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]

    $default  reduce using rule 30 (expr)

    Conflict between rule 30 and token "+" resolved as reduce ("+" < UMINUS).
    Conflict between rule 30 and token "-" resolved as reduce ("-" < UMINUS).
    Conflict between rule 30 and token "*" resolved as reduce ("*" < UMINUS).
    Conflict between rule 30 and token "/" resolved as reduce ("/" < UMINUS).


State 38

   15 boolean_expr: "(" boolean_expr . ")"
   16             | boolean_expr . "AND" boolean_expr
   17             | boolean_expr . "OR" boolean_expr

    "AND"  shift, and go to state 42
    "OR"   shift, and go to state 43
    ")"    shift, and go to state 60


State 39

   18 boolean_expr: expr . "=" expr
   19             | expr . "!=" expr
   20             | expr . ">" expr
   21             | expr . "<" expr
   22             | expr . ">=" expr
   23             | expr . "<=" expr
   24             | expr . "LIKE" expr
   25 expr: "(" expr . ")"
   26     | expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr

    "+"     shift, and go to state 44
    "-"     shift, and go to state 45
    "*"     shift, and go to state 46
    "/"     shift, and go to state 47
    "="     shift, and go to state 48
    "!="    shift, and go to state 49
    "<"     shift, and go to state 50
    ">"     shift, and go to state 51
    "<="    shift, and go to state 52
    ">="    shift, and go to state 53
    "LIKE"  shift, and go to state 54
    ")"     shift, and go to state 61


State 40

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   31     | fn1 "(" . expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 62


State 41

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   32     | fn3 "(" . expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 63


State 42

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   15 boolean_expr: . "(" boolean_expr ")"
   16             | . boolean_expr "AND" boolean_expr
   16             | boolean_expr "AND" . boolean_expr
   17             | . boolean_expr "OR" boolean_expr
   18             | . expr "=" expr
   19             | . expr "!=" expr
   20             | . expr ">" expr
   21             | . expr "<" expr
   22             | . expr ">=" expr
   23             | . expr "<=" expr
   24             | . expr "LIKE" expr
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1           go to state 29
    fn3           go to state 30
    boolean_expr  go to state 64
    expr          go to state 32


State 43

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   15 boolean_expr: . "(" boolean_expr ")"
   16             | . boolean_expr "AND" boolean_expr
   17             | . boolean_expr "OR" boolean_expr
   17             | boolean_expr "OR" . boolean_expr
   18             | . expr "=" expr
   19             | . expr "!=" expr
   20             | . expr ">" expr
   21             | . expr "<" expr
   22             | . expr ">=" expr
   23             | . expr "<=" expr
   24             | . expr "LIKE" expr
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1           go to state 29
    fn3           go to state 30
    boolean_expr  go to state 65
    expr          go to state 32


State 44

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   26     | expr "+" . expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 66


State 45

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   27     | expr "-" . expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 67


State 46

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   28     | expr "*" . expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 68


State 47

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   29     | expr "/" . expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 69


State 48

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   18 boolean_expr: expr "=" . expr
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 70


State 49

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   19 boolean_expr: expr "!=" . expr
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 71


State 50

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   21 boolean_expr: expr "<" . expr
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 72


State 51

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   20 boolean_expr: expr ">" . expr
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 73


State 52

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   23 boolean_expr: expr "<=" . expr
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 74


State 53

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   22 boolean_expr: expr ">=" . expr
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 75


State 54

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   24 boolean_expr: expr "LIKE" . expr
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 76


State 55

   38 group_by_stmt: "GROUP" "BY" . group_by_fields
   39 group_by_fields: . group_by_field
   40                | . group_by_fields "," group_by_field
   41 group_by_field: . "identifier"

    "identifier"  shift, and go to state 77

    group_by_fields  go to state 78
    group_by_field   go to state 79


State 56

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   15 boolean_expr: . "(" boolean_expr ")"
   16             | . boolean_expr "AND" boolean_expr
   17             | . boolean_expr "OR" boolean_expr
   18             | . expr "=" expr
   19             | . expr "!=" expr
   20             | . expr ">" expr
   21             | . expr "<" expr
   22             | . expr ">=" expr
   23             | . expr "<=" expr
   24             | . expr "LIKE" expr
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"
   43 having_stmt: "HAVING" . boolean_expr

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1           go to state 29
    fn3           go to state 30
    boolean_expr  go to state 80
    expr          go to state 32


State 57

    1 query: select_stmt from_stmt where_stmt group_by_stmt having_stmt . order_by_stmt
   44 order_by_stmt: . %empty  ["end of file"]
   45              | . "ORDER" "BY" order_by_fields

    "ORDER"  shift, and go to state 81

    $default  reduce using rule 44 (order_by_stmt)

    order_by_stmt  go to state 82


State 58

   12 from_stmt: "FROM" "(" "string" "," "string" . ")"

    ")"  shift, and go to state 83


State 59

   25 expr: "(" expr . ")"
   26     | expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr

    "+"  shift, and go to state 44
    "-"  shift, and go to state 45
    "*"  shift, and go to state 46
    "/"  shift, and go to state 47
    ")"  shift, and go to state 61


State 60

   15 boolean_expr: "(" boolean_expr ")" .

    $default  reduce using rule 15 (boolean_expr)


State 61

   25 expr: "(" expr ")" .

    $default  reduce using rule 25 (expr)


State 62

   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr
   31     | fn1 "(" expr . ")"

    "+"  shift, and go to state 44
    "-"  shift, and go to state 45
    "*"  shift, and go to state 46
    "/"  shift, and go to state 47
    ")"  shift, and go to state 84


State 63

   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr
   32     | fn3 "(" expr . "," expr "," expr ")"

    ","  shift, and go to state 85
    "+"  shift, and go to state 44
    "-"  shift, and go to state 45
    "*"  shift, and go to state 46
    "/"  shift, and go to state 47


State 64

   16 boolean_expr: boolean_expr . "AND" boolean_expr
   16             | boolean_expr "AND" boolean_expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", ")"]
   17             | boolean_expr . "OR" boolean_expr

    "OR"  shift, and go to state 43

    $default  reduce using rule 16 (boolean_expr)

    Conflict between rule 16 and token "AND" resolved as reduce (%left "AND").
    Conflict between rule 16 and token "OR" resolved as shift ("AND" < "OR").


State 65

   16 boolean_expr: boolean_expr . "AND" boolean_expr
   17             | boolean_expr . "OR" boolean_expr
   17             | boolean_expr "OR" boolean_expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]

    $default  reduce using rule 17 (boolean_expr)

    Conflict between rule 17 and token "AND" resolved as reduce ("AND" < "OR").
    Conflict between rule 17 and token "OR" resolved as reduce (%left "OR").


State 66

   26 expr: expr . "+" expr
   26     | expr "+" expr .  ["end of file", "GROUP", "HAVING", "ORDER", ",", "+", "-", "=", "!=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr

    "*"  shift, and go to state 46
    "/"  shift, and go to state 47

    $default  reduce using rule 26 (expr)

    Conflict between rule 26 and token "+" resolved as reduce (%left "+").
    Conflict between rule 26 and token "-" resolved as reduce (%left "-").
    Conflict between rule 26 and token "*" resolved as shift ("+" < "*").
    Conflict between rule 26 and token "/" resolved as shift ("+" < "/").


State 67

   26 expr: expr . "+" expr
   27     | expr . "-" expr
   27     | expr "-" expr .  ["end of file", "GROUP", "HAVING", "ORDER", ",", "+", "-", "=", "!=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]
   28     | expr . "*" expr
   29     | expr . "/" expr

    "*"  shift, and go to state 46
    "/"  shift, and go to state 47

    $default  reduce using rule 27 (expr)

    Conflict between rule 27 and token "+" resolved as reduce (%left "+").
    Conflict between rule 27 and token "-" resolved as reduce (%left "-").
    Conflict between rule 27 and token "*" resolved as shift ("-" < "*").
    Conflict between rule 27 and token "/" resolved as shift ("-" < "/").


State 68

   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   28     | expr "*" expr .  ["end of file", "GROUP", "HAVING", "ORDER", ",", "+", "-", "*", "/", "=", "!=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]
   29     | expr . "/" expr

    $default  reduce using rule 28 (expr)

    Conflict between rule 28 and token "+" resolved as reduce ("+" < "*").
    Conflict between rule 28 and token "-" resolved as reduce ("-" < "*").
    Conflict between rule 28 and token "*" resolved as reduce (%left "*").
    Conflict between rule 28 and token "/" resolved as reduce (%left "/").


State 69

   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr
   29     | expr "/" expr .  ["end of file", "GROUP", "HAVING", "ORDER", ",", "+", "-", "*", "/", "=", "!=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]

    $default  reduce using rule 29 (expr)

    Conflict between rule 29 and token "+" resolved as reduce ("+" < "/").
    Conflict between rule 29 and token "-" resolved as reduce ("-" < "/").
    Conflict between rule 29 and token "*" resolved as reduce (%left "*").
    Conflict between rule 29 and token "/" resolved as reduce (%left "/").


State 70

   18 boolean_expr: expr "=" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr

    "+"  shift, and go to state 44
    "-"  shift, and go to state 45
    "*"  shift, and go to state 46
    "/"  shift, and go to state 47

    $default  reduce using rule 18 (boolean_expr)


State 71

   19 boolean_expr: expr "!=" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr

    "+"  shift, and go to state 44
    "-"  shift, and go to state 45
    "*"  shift, and go to state 46
    "/"  shift, and go to state 47

    $default  reduce using rule 19 (boolean_expr)


State 72

   21 boolean_expr: expr "<" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr

    "+"  shift, and go to state 44
    "-"  shift, and go to state 45
    "*"  shift, and go to state 46
    "/"  shift, and go to state 47

    $default  reduce using rule 21 (boolean_expr)


State 73

   20 boolean_expr: expr ">" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr

    "+"  shift, and go to state 44
    "-"  shift, and go to state 45
    "*"  shift, and go to state 46
    "/"  shift, and go to state 47

    $default  reduce using rule 20 (boolean_expr)


State 74

   23 boolean_expr: expr "<=" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr

    "+"  shift, and go to state 44
    "-"  shift, and go to state 45
    "*"  shift, and go to state 46
    "/"  shift, and go to state 47

    $default  reduce using rule 23 (boolean_expr)


State 75

   22 boolean_expr: expr ">=" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr

    "+"  shift, and go to state 44
    "-"  shift, and go to state 45
    "*"  shift, and go to state 46
    "/"  shift, and go to state 47

    $default  reduce using rule 22 (boolean_expr)


State 76

   24 boolean_expr: expr "LIKE" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr

    "+"  shift, and go to state 44
    "-"  shift, and go to state 45
    "*"  shift, and go to state 46
    "/"  shift, and go to state 47

    $default  reduce using rule 24 (boolean_expr)


State 77

   41 group_by_field: "identifier" .

    $default  reduce using rule 41 (group_by_field)


State 78

   38 group_by_stmt: "GROUP" "BY" group_by_fields .  ["end of file", "HAVING", "ORDER"]
   40 group_by_fields: group_by_fields . "," group_by_field

    ","  shift, and go to state 86

    $default  reduce using rule 38 (group_by_stmt)


State 79

   39 group_by_fields: group_by_field .

    $default  reduce using rule 39 (group_by_fields)


State 80

   16 boolean_expr: boolean_expr . "AND" boolean_expr
   17             | boolean_expr . "OR" boolean_expr
   43 having_stmt: "HAVING" boolean_expr .  ["end of file", "ORDER"]

    "AND"  shift, and go to state 42
    "OR"   shift, and go to state 43

    $default  reduce using rule 43 (having_stmt)


State 81

   45 order_by_stmt: "ORDER" . "BY" order_by_fields

    "BY"  shift, and go to state 87


State 82

    1 query: select_stmt from_stmt where_stmt group_by_stmt having_stmt order_by_stmt .

    $default  reduce using rule 1 (query)


State 83

   12 from_stmt: "FROM" "(" "string" "," "string" ")" .

    $default  reduce using rule 12 (from_stmt)


State 84

   31 expr: fn1 "(" expr ")" .

    $default  reduce using rule 31 (expr)


State 85

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   32     | fn3 "(" expr "," . expr "," expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 88


State 86

   40 group_by_fields: group_by_fields "," . group_by_field
   41 group_by_field: . "identifier"

    "identifier"  shift, and go to state 77

    group_by_field  go to state 89


State 87

   45 order_by_stmt: "ORDER" "BY" . order_by_fields
   46 order_by_fields: . order_by_field
   47                | . order_by_fields "," order_by_field
   48 order_by_field: . "identifier"

    "identifier"  shift, and go to state 90

    order_by_fields  go to state 91
    order_by_field   go to state 92


State 88

   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr
   32     | fn3 "(" expr "," expr . "," expr ")"

    ","  shift, and go to state 93
    "+"  shift, and go to state 44
    "-"  shift, and go to state 45
    "*"  shift, and go to state 46
    "/"  shift, and go to state 47


State 89

   40 group_by_fields: group_by_fields "," group_by_field .

    $default  reduce using rule 40 (group_by_fields)


State 90

   48 order_by_field: "identifier" .

    $default  reduce using rule 48 (order_by_field)


State 91

   45 order_by_stmt: "ORDER" "BY" order_by_fields .  ["end of file"]
   47 order_by_fields: order_by_fields . "," order_by_field

    ","  shift, and go to state 94

    $default  reduce using rule 45 (order_by_stmt)


State 92

   46 order_by_fields: order_by_field .

    $default  reduce using rule 46 (order_by_fields)


State 93

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   25 expr: . "(" expr ")"
   26     | . expr "+" expr
   27     | . expr "-" expr
   28     | . expr "*" expr
   29     | . expr "/" expr
   30     | . "-" expr
   31     | . fn1 "(" expr ")"
   32     | . fn3 "(" expr "," expr "," expr ")"
   32     | fn3 "(" expr "," expr "," . expr ")"
   33     | . "identifier"
   34     | . "string"
   35     | . "long"
   36     | . "double"

    "-"           shift, and go to state 18
    "("           shift, and go to state 36
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "STR"         shift, and go to state 24
    "INT"         shift, and go to state 25
    "SUM"         shift, and go to state 26
    "COUNT"       shift, and go to state 27
    "SUBSTR"      shift, and go to state 28

    fn1   go to state 29
    fn3   go to state 30
    expr  go to state 95


State 94

   47 order_by_fields: order_by_fields "," . order_by_field
   48 order_by_field: . "identifier"

    "identifier"  shift, and go to state 90

    order_by_field  go to state 96


State 95

   26 expr: expr . "+" expr
   27     | expr . "-" expr
   28     | expr . "*" expr
   29     | expr . "/" expr
   32     | fn3 "(" expr "," expr "," expr . ")"

    "+"  shift, and go to state 44
    "-"  shift, and go to state 45
    "*"  shift, and go to state 46
    "/"  shift, and go to state 47
    ")"  shift, and go to state 97


State 96

   47 order_by_fields: order_by_fields "," order_by_field .

    $default  reduce using rule 47 (order_by_fields)


State 97

   32 expr: fn3 "(" expr "," expr "," expr ")" .

    $default  reduce using rule 32 (expr)
