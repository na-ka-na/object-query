Grammar

    0 $accept: query "end of file"

    1 query: select_stmt from_stmt where_stmt group_by_stmt having_stmt order_by_stmt

    2 fn1: "STR"
    3    | "INT"
    4    | "SUM"
    5    | "COUNT"

    6 fn3: "SUBSTR"

    7 select_stmt: "SELECT" select_fields
    8            | "SELECT" "DISTINCT" select_fields

    9 select_fields: select_field
   10              | select_fields "," select_field

   11 select_field: "identifier"

   12 from_stmt: "FROM" "(" "string" "," "string" ")"

   13 where_stmt: %empty
   14           | "WHERE" boolean_expr

   15 boolean_expr: "(" boolean_expr ")"
   16             | boolean_expr "AND" boolean_expr
   17             | boolean_expr "OR" boolean_expr
   18             | expr "=" expr
   19             | expr "!=" expr
   20             | expr ">" expr
   21             | expr "<" expr
   22             | expr ">=" expr
   23             | expr "<=" expr
   24             | expr "LIKE" expr
   25             | "identifier" "IS" "NULL"
   26             | "identifier" "IS" "NOT" "NULL"

   27 expr: "(" expr ")"
   28     | expr "+" expr
   29     | expr "-" expr
   30     | expr "*" expr
   31     | expr "/" expr
   32     | "-" expr
   33     | fn1 "(" expr ")"
   34     | fn3 "(" expr "," expr "," expr ")"
   35     | "identifier"
   36     | "string"
   37     | "long"
   38     | "double"
   39     | "bool"

   40 group_by_stmt: %empty
   41              | "GROUP" "BY" group_by_fields

   42 group_by_fields: group_by_field
   43                | group_by_fields "," group_by_field

   44 group_by_field: "identifier"

   45 having_stmt: %empty
   46            | "HAVING" boolean_expr

   47 order_by_stmt: %empty
   48              | "ORDER" "BY" order_by_fields

   49 order_by_fields: order_by_field
   50                | order_by_fields "," order_by_field

   51 order_by_field: "identifier"


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"SELECT" (258) 7 8
"FROM" (259) 12
"WHERE" (260) 14
"GROUP" (261) 41
"HAVING" (262) 46
"ORDER" (263) 48
"BY" (264) 41 48
"," (265) 10 12 34 43 50
"+" (266) 28
"-" (267) 29 32
"*" (268) 30
"/" (269) 31
"=" (270) 18
"!=" (271) 19
"<" (272) 21
">" (273) 20
"<=" (274) 23
">=" (275) 22
"LIKE" (276) 24
"IS" (277) 25 26
"NOT" (278) 26
"NULL" (279) 25 26
"AND" (280) 16
"OR" (281) 17
"(" (282) 12 15 27 33 34
")" (283) 12 15 27 33 34
"DISTINCT" (284) 8
"identifier" (285) 11 25 26 35 44 51
"string" (286) 12 36
"long" (287) 37
"double" (288) 38
"bool" (289) 39
"STR" (290) 2
"INT" (291) 3
"SUM" (292) 4
"COUNT" (293) 5
"SUBSTR" (294) 6
UMINUS (295)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
query (42)
    on left: 1, on right: 0
fn1 (43)
    on left: 2 3 4 5, on right: 33
fn3 (44)
    on left: 6, on right: 34
select_stmt (45)
    on left: 7 8, on right: 1
select_fields (46)
    on left: 9 10, on right: 7 8 10
select_field (47)
    on left: 11, on right: 9 10
from_stmt (48)
    on left: 12, on right: 1
where_stmt (49)
    on left: 13 14, on right: 1
boolean_expr (50)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26, on right: 14 15 16
    17 46
expr (51)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39, on right: 18 19
    20 21 22 23 24 27 28 29 30 31 32 33 34
group_by_stmt (52)
    on left: 40 41, on right: 1
group_by_fields (53)
    on left: 42 43, on right: 41 43
group_by_field (54)
    on left: 44, on right: 42 43
having_stmt (55)
    on left: 45 46, on right: 1
order_by_stmt (56)
    on left: 47 48, on right: 1
order_by_fields (57)
    on left: 49 50, on right: 48 50
order_by_field (58)
    on left: 51, on right: 49 50


State 0

    0 $accept: . query "end of file"
    1 query: . select_stmt from_stmt where_stmt group_by_stmt having_stmt order_by_stmt
    7 select_stmt: . "SELECT" select_fields
    8            | . "SELECT" "DISTINCT" select_fields

    "SELECT"  shift, and go to state 1

    query        go to state 2
    select_stmt  go to state 3


State 1

    7 select_stmt: "SELECT" . select_fields
    8            | "SELECT" . "DISTINCT" select_fields
    9 select_fields: . select_field
   10              | . select_fields "," select_field
   11 select_field: . "identifier"

    "DISTINCT"    shift, and go to state 4
    "identifier"  shift, and go to state 5

    select_fields  go to state 6
    select_field   go to state 7


State 2

    0 $accept: query . "end of file"

    "end of file"  shift, and go to state 8


State 3

    1 query: select_stmt . from_stmt where_stmt group_by_stmt having_stmt order_by_stmt
   12 from_stmt: . "FROM" "(" "string" "," "string" ")"

    "FROM"  shift, and go to state 9

    from_stmt  go to state 10


State 4

    8 select_stmt: "SELECT" "DISTINCT" . select_fields
    9 select_fields: . select_field
   10              | . select_fields "," select_field
   11 select_field: . "identifier"

    "identifier"  shift, and go to state 5

    select_fields  go to state 11
    select_field   go to state 7


State 5

   11 select_field: "identifier" .

    $default  reduce using rule 11 (select_field)


State 6

    7 select_stmt: "SELECT" select_fields .  ["FROM"]
   10 select_fields: select_fields . "," select_field

    ","  shift, and go to state 12

    $default  reduce using rule 7 (select_stmt)


State 7

    9 select_fields: select_field .

    $default  reduce using rule 9 (select_fields)


State 8

    0 $accept: query "end of file" .

    $default  accept


State 9

   12 from_stmt: "FROM" . "(" "string" "," "string" ")"

    "("  shift, and go to state 13


State 10

    1 query: select_stmt from_stmt . where_stmt group_by_stmt having_stmt order_by_stmt
   13 where_stmt: . %empty  ["end of file", "GROUP", "HAVING", "ORDER"]
   14           | . "WHERE" boolean_expr

    "WHERE"  shift, and go to state 14

    $default  reduce using rule 13 (where_stmt)

    where_stmt  go to state 15


State 11

    8 select_stmt: "SELECT" "DISTINCT" select_fields .  ["FROM"]
   10 select_fields: select_fields . "," select_field

    ","  shift, and go to state 12

    $default  reduce using rule 8 (select_stmt)


State 12

   10 select_fields: select_fields "," . select_field
   11 select_field: . "identifier"

    "identifier"  shift, and go to state 5

    select_field  go to state 16


State 13

   12 from_stmt: "FROM" "(" . "string" "," "string" ")"

    "string"  shift, and go to state 17


State 14

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   14 where_stmt: "WHERE" . boolean_expr
   15 boolean_expr: . "(" boolean_expr ")"
   16             | . boolean_expr "AND" boolean_expr
   17             | . boolean_expr "OR" boolean_expr
   18             | . expr "=" expr
   19             | . expr "!=" expr
   20             | . expr ">" expr
   21             | . expr "<" expr
   22             | . expr ">=" expr
   23             | . expr "<=" expr
   24             | . expr "LIKE" expr
   25             | . "identifier" "IS" "NULL"
   26             | . "identifier" "IS" "NOT" "NULL"
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1           go to state 30
    fn3           go to state 31
    boolean_expr  go to state 32
    expr          go to state 33


State 15

    1 query: select_stmt from_stmt where_stmt . group_by_stmt having_stmt order_by_stmt
   40 group_by_stmt: . %empty  ["end of file", "HAVING", "ORDER"]
   41              | . "GROUP" "BY" group_by_fields

    "GROUP"  shift, and go to state 34

    $default  reduce using rule 40 (group_by_stmt)

    group_by_stmt  go to state 35


State 16

   10 select_fields: select_fields "," select_field .

    $default  reduce using rule 10 (select_fields)


State 17

   12 from_stmt: "FROM" "(" "string" . "," "string" ")"

    ","  shift, and go to state 36


State 18

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   32     | "-" . expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 39


State 19

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   15 boolean_expr: . "(" boolean_expr ")"
   15             | "(" . boolean_expr ")"
   16             | . boolean_expr "AND" boolean_expr
   17             | . boolean_expr "OR" boolean_expr
   18             | . expr "=" expr
   19             | . expr "!=" expr
   20             | . expr ">" expr
   21             | . expr "<" expr
   22             | . expr ">=" expr
   23             | . expr "<=" expr
   24             | . expr "LIKE" expr
   25             | . "identifier" "IS" "NULL"
   26             | . "identifier" "IS" "NOT" "NULL"
   27 expr: . "(" expr ")"
   27     | "(" . expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1           go to state 30
    fn3           go to state 31
    boolean_expr  go to state 40
    expr          go to state 41


State 20

   25 boolean_expr: "identifier" . "IS" "NULL"
   26             | "identifier" . "IS" "NOT" "NULL"
   35 expr: "identifier" .  ["+", "-", "*", "/", "=", "!=", "<", ">", "<=", ">=", "LIKE", ")"]

    "IS"  shift, and go to state 42

    $default  reduce using rule 35 (expr)


State 21

   36 expr: "string" .

    $default  reduce using rule 36 (expr)


State 22

   37 expr: "long" .

    $default  reduce using rule 37 (expr)


State 23

   38 expr: "double" .

    $default  reduce using rule 38 (expr)


State 24

   39 expr: "bool" .

    $default  reduce using rule 39 (expr)


State 25

    2 fn1: "STR" .

    $default  reduce using rule 2 (fn1)


State 26

    3 fn1: "INT" .

    $default  reduce using rule 3 (fn1)


State 27

    4 fn1: "SUM" .

    $default  reduce using rule 4 (fn1)


State 28

    5 fn1: "COUNT" .

    $default  reduce using rule 5 (fn1)


State 29

    6 fn3: "SUBSTR" .

    $default  reduce using rule 6 (fn3)


State 30

   33 expr: fn1 . "(" expr ")"

    "("  shift, and go to state 43


State 31

   34 expr: fn3 . "(" expr "," expr "," expr ")"

    "("  shift, and go to state 44


State 32

   14 where_stmt: "WHERE" boolean_expr .  ["end of file", "GROUP", "HAVING", "ORDER"]
   16 boolean_expr: boolean_expr . "AND" boolean_expr
   17             | boolean_expr . "OR" boolean_expr

    "AND"  shift, and go to state 45
    "OR"   shift, and go to state 46

    $default  reduce using rule 14 (where_stmt)


State 33

   18 boolean_expr: expr . "=" expr
   19             | expr . "!=" expr
   20             | expr . ">" expr
   21             | expr . "<" expr
   22             | expr . ">=" expr
   23             | expr . "<=" expr
   24             | expr . "LIKE" expr
   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr

    "+"     shift, and go to state 47
    "-"     shift, and go to state 48
    "*"     shift, and go to state 49
    "/"     shift, and go to state 50
    "="     shift, and go to state 51
    "!="    shift, and go to state 52
    "<"     shift, and go to state 53
    ">"     shift, and go to state 54
    "<="    shift, and go to state 55
    ">="    shift, and go to state 56
    "LIKE"  shift, and go to state 57


State 34

   41 group_by_stmt: "GROUP" . "BY" group_by_fields

    "BY"  shift, and go to state 58


State 35

    1 query: select_stmt from_stmt where_stmt group_by_stmt . having_stmt order_by_stmt
   45 having_stmt: . %empty  ["end of file", "ORDER"]
   46            | . "HAVING" boolean_expr

    "HAVING"  shift, and go to state 59

    $default  reduce using rule 45 (having_stmt)

    having_stmt  go to state 60


State 36

   12 from_stmt: "FROM" "(" "string" "," . "string" ")"

    "string"  shift, and go to state 61


State 37

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   27 expr: . "(" expr ")"
   27     | "(" . expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 62


State 38

   35 expr: "identifier" .

    $default  reduce using rule 35 (expr)


State 39

   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr
   32     | "-" expr .  ["end of file", "GROUP", "HAVING", "ORDER", ",", "+", "-", "*", "/", "=", "!=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]

    $default  reduce using rule 32 (expr)

    Conflict between rule 32 and token "+" resolved as reduce ("+" < UMINUS).
    Conflict between rule 32 and token "-" resolved as reduce ("-" < UMINUS).
    Conflict between rule 32 and token "*" resolved as reduce ("*" < UMINUS).
    Conflict between rule 32 and token "/" resolved as reduce ("/" < UMINUS).


State 40

   15 boolean_expr: "(" boolean_expr . ")"
   16             | boolean_expr . "AND" boolean_expr
   17             | boolean_expr . "OR" boolean_expr

    "AND"  shift, and go to state 45
    "OR"   shift, and go to state 46
    ")"    shift, and go to state 63


State 41

   18 boolean_expr: expr . "=" expr
   19             | expr . "!=" expr
   20             | expr . ">" expr
   21             | expr . "<" expr
   22             | expr . ">=" expr
   23             | expr . "<=" expr
   24             | expr . "LIKE" expr
   27 expr: "(" expr . ")"
   28     | expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr

    "+"     shift, and go to state 47
    "-"     shift, and go to state 48
    "*"     shift, and go to state 49
    "/"     shift, and go to state 50
    "="     shift, and go to state 51
    "!="    shift, and go to state 52
    "<"     shift, and go to state 53
    ">"     shift, and go to state 54
    "<="    shift, and go to state 55
    ">="    shift, and go to state 56
    "LIKE"  shift, and go to state 57
    ")"     shift, and go to state 64


State 42

   25 boolean_expr: "identifier" "IS" . "NULL"
   26             | "identifier" "IS" . "NOT" "NULL"

    "NOT"   shift, and go to state 65
    "NULL"  shift, and go to state 66


State 43

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   33     | fn1 "(" . expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 67


State 44

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   34     | fn3 "(" . expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 68


State 45

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   15 boolean_expr: . "(" boolean_expr ")"
   16             | . boolean_expr "AND" boolean_expr
   16             | boolean_expr "AND" . boolean_expr
   17             | . boolean_expr "OR" boolean_expr
   18             | . expr "=" expr
   19             | . expr "!=" expr
   20             | . expr ">" expr
   21             | . expr "<" expr
   22             | . expr ">=" expr
   23             | . expr "<=" expr
   24             | . expr "LIKE" expr
   25             | . "identifier" "IS" "NULL"
   26             | . "identifier" "IS" "NOT" "NULL"
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1           go to state 30
    fn3           go to state 31
    boolean_expr  go to state 69
    expr          go to state 33


State 46

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   15 boolean_expr: . "(" boolean_expr ")"
   16             | . boolean_expr "AND" boolean_expr
   17             | . boolean_expr "OR" boolean_expr
   17             | boolean_expr "OR" . boolean_expr
   18             | . expr "=" expr
   19             | . expr "!=" expr
   20             | . expr ">" expr
   21             | . expr "<" expr
   22             | . expr ">=" expr
   23             | . expr "<=" expr
   24             | . expr "LIKE" expr
   25             | . "identifier" "IS" "NULL"
   26             | . "identifier" "IS" "NOT" "NULL"
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1           go to state 30
    fn3           go to state 31
    boolean_expr  go to state 70
    expr          go to state 33


State 47

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   28     | expr "+" . expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 71


State 48

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   29     | expr "-" . expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 72


State 49

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   30     | expr "*" . expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 73


State 50

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   31     | expr "/" . expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 74


State 51

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   18 boolean_expr: expr "=" . expr
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 75


State 52

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   19 boolean_expr: expr "!=" . expr
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 76


State 53

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   21 boolean_expr: expr "<" . expr
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 77


State 54

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   20 boolean_expr: expr ">" . expr
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 78


State 55

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   23 boolean_expr: expr "<=" . expr
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 79


State 56

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   22 boolean_expr: expr ">=" . expr
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 80


State 57

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   24 boolean_expr: expr "LIKE" . expr
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 81


State 58

   41 group_by_stmt: "GROUP" "BY" . group_by_fields
   42 group_by_fields: . group_by_field
   43                | . group_by_fields "," group_by_field
   44 group_by_field: . "identifier"

    "identifier"  shift, and go to state 82

    group_by_fields  go to state 83
    group_by_field   go to state 84


State 59

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   15 boolean_expr: . "(" boolean_expr ")"
   16             | . boolean_expr "AND" boolean_expr
   17             | . boolean_expr "OR" boolean_expr
   18             | . expr "=" expr
   19             | . expr "!=" expr
   20             | . expr ">" expr
   21             | . expr "<" expr
   22             | . expr ">=" expr
   23             | . expr "<=" expr
   24             | . expr "LIKE" expr
   25             | . "identifier" "IS" "NULL"
   26             | . "identifier" "IS" "NOT" "NULL"
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"
   46 having_stmt: "HAVING" . boolean_expr

    "-"           shift, and go to state 18
    "("           shift, and go to state 19
    "identifier"  shift, and go to state 20
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1           go to state 30
    fn3           go to state 31
    boolean_expr  go to state 85
    expr          go to state 33


State 60

    1 query: select_stmt from_stmt where_stmt group_by_stmt having_stmt . order_by_stmt
   47 order_by_stmt: . %empty  ["end of file"]
   48              | . "ORDER" "BY" order_by_fields

    "ORDER"  shift, and go to state 86

    $default  reduce using rule 47 (order_by_stmt)

    order_by_stmt  go to state 87


State 61

   12 from_stmt: "FROM" "(" "string" "," "string" . ")"

    ")"  shift, and go to state 88


State 62

   27 expr: "(" expr . ")"
   28     | expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr

    "+"  shift, and go to state 47
    "-"  shift, and go to state 48
    "*"  shift, and go to state 49
    "/"  shift, and go to state 50
    ")"  shift, and go to state 64


State 63

   15 boolean_expr: "(" boolean_expr ")" .

    $default  reduce using rule 15 (boolean_expr)


State 64

   27 expr: "(" expr ")" .

    $default  reduce using rule 27 (expr)


State 65

   26 boolean_expr: "identifier" "IS" "NOT" . "NULL"

    "NULL"  shift, and go to state 89


State 66

   25 boolean_expr: "identifier" "IS" "NULL" .

    $default  reduce using rule 25 (boolean_expr)


State 67

   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr
   33     | fn1 "(" expr . ")"

    "+"  shift, and go to state 47
    "-"  shift, and go to state 48
    "*"  shift, and go to state 49
    "/"  shift, and go to state 50
    ")"  shift, and go to state 90


State 68

   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr
   34     | fn3 "(" expr . "," expr "," expr ")"

    ","  shift, and go to state 91
    "+"  shift, and go to state 47
    "-"  shift, and go to state 48
    "*"  shift, and go to state 49
    "/"  shift, and go to state 50


State 69

   16 boolean_expr: boolean_expr . "AND" boolean_expr
   16             | boolean_expr "AND" boolean_expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", ")"]
   17             | boolean_expr . "OR" boolean_expr

    "OR"  shift, and go to state 46

    $default  reduce using rule 16 (boolean_expr)

    Conflict between rule 16 and token "AND" resolved as reduce (%left "AND").
    Conflict between rule 16 and token "OR" resolved as shift ("AND" < "OR").


State 70

   16 boolean_expr: boolean_expr . "AND" boolean_expr
   17             | boolean_expr . "OR" boolean_expr
   17             | boolean_expr "OR" boolean_expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]

    $default  reduce using rule 17 (boolean_expr)

    Conflict between rule 17 and token "AND" resolved as reduce ("AND" < "OR").
    Conflict between rule 17 and token "OR" resolved as reduce (%left "OR").


State 71

   28 expr: expr . "+" expr
   28     | expr "+" expr .  ["end of file", "GROUP", "HAVING", "ORDER", ",", "+", "-", "=", "!=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr

    "*"  shift, and go to state 49
    "/"  shift, and go to state 50

    $default  reduce using rule 28 (expr)

    Conflict between rule 28 and token "+" resolved as reduce (%left "+").
    Conflict between rule 28 and token "-" resolved as reduce (%left "-").
    Conflict between rule 28 and token "*" resolved as shift ("+" < "*").
    Conflict between rule 28 and token "/" resolved as shift ("+" < "/").


State 72

   28 expr: expr . "+" expr
   29     | expr . "-" expr
   29     | expr "-" expr .  ["end of file", "GROUP", "HAVING", "ORDER", ",", "+", "-", "=", "!=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]
   30     | expr . "*" expr
   31     | expr . "/" expr

    "*"  shift, and go to state 49
    "/"  shift, and go to state 50

    $default  reduce using rule 29 (expr)

    Conflict between rule 29 and token "+" resolved as reduce (%left "+").
    Conflict between rule 29 and token "-" resolved as reduce (%left "-").
    Conflict between rule 29 and token "*" resolved as shift ("-" < "*").
    Conflict between rule 29 and token "/" resolved as shift ("-" < "/").


State 73

   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   30     | expr "*" expr .  ["end of file", "GROUP", "HAVING", "ORDER", ",", "+", "-", "*", "/", "=", "!=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]
   31     | expr . "/" expr

    $default  reduce using rule 30 (expr)

    Conflict between rule 30 and token "+" resolved as reduce ("+" < "*").
    Conflict between rule 30 and token "-" resolved as reduce ("-" < "*").
    Conflict between rule 30 and token "*" resolved as reduce (%left "*").
    Conflict between rule 30 and token "/" resolved as reduce (%left "/").


State 74

   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr
   31     | expr "/" expr .  ["end of file", "GROUP", "HAVING", "ORDER", ",", "+", "-", "*", "/", "=", "!=", "<", ">", "<=", ">=", "LIKE", "AND", "OR", ")"]

    $default  reduce using rule 31 (expr)

    Conflict between rule 31 and token "+" resolved as reduce ("+" < "/").
    Conflict between rule 31 and token "-" resolved as reduce ("-" < "/").
    Conflict between rule 31 and token "*" resolved as reduce (%left "*").
    Conflict between rule 31 and token "/" resolved as reduce (%left "/").


State 75

   18 boolean_expr: expr "=" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr

    "+"  shift, and go to state 47
    "-"  shift, and go to state 48
    "*"  shift, and go to state 49
    "/"  shift, and go to state 50

    $default  reduce using rule 18 (boolean_expr)


State 76

   19 boolean_expr: expr "!=" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr

    "+"  shift, and go to state 47
    "-"  shift, and go to state 48
    "*"  shift, and go to state 49
    "/"  shift, and go to state 50

    $default  reduce using rule 19 (boolean_expr)


State 77

   21 boolean_expr: expr "<" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr

    "+"  shift, and go to state 47
    "-"  shift, and go to state 48
    "*"  shift, and go to state 49
    "/"  shift, and go to state 50

    $default  reduce using rule 21 (boolean_expr)


State 78

   20 boolean_expr: expr ">" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr

    "+"  shift, and go to state 47
    "-"  shift, and go to state 48
    "*"  shift, and go to state 49
    "/"  shift, and go to state 50

    $default  reduce using rule 20 (boolean_expr)


State 79

   23 boolean_expr: expr "<=" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr

    "+"  shift, and go to state 47
    "-"  shift, and go to state 48
    "*"  shift, and go to state 49
    "/"  shift, and go to state 50

    $default  reduce using rule 23 (boolean_expr)


State 80

   22 boolean_expr: expr ">=" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr

    "+"  shift, and go to state 47
    "-"  shift, and go to state 48
    "*"  shift, and go to state 49
    "/"  shift, and go to state 50

    $default  reduce using rule 22 (boolean_expr)


State 81

   24 boolean_expr: expr "LIKE" expr .  ["end of file", "GROUP", "HAVING", "ORDER", "AND", "OR", ")"]
   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr

    "+"  shift, and go to state 47
    "-"  shift, and go to state 48
    "*"  shift, and go to state 49
    "/"  shift, and go to state 50

    $default  reduce using rule 24 (boolean_expr)


State 82

   44 group_by_field: "identifier" .

    $default  reduce using rule 44 (group_by_field)


State 83

   41 group_by_stmt: "GROUP" "BY" group_by_fields .  ["end of file", "HAVING", "ORDER"]
   43 group_by_fields: group_by_fields . "," group_by_field

    ","  shift, and go to state 92

    $default  reduce using rule 41 (group_by_stmt)


State 84

   42 group_by_fields: group_by_field .

    $default  reduce using rule 42 (group_by_fields)


State 85

   16 boolean_expr: boolean_expr . "AND" boolean_expr
   17             | boolean_expr . "OR" boolean_expr
   46 having_stmt: "HAVING" boolean_expr .  ["end of file", "ORDER"]

    "AND"  shift, and go to state 45
    "OR"   shift, and go to state 46

    $default  reduce using rule 46 (having_stmt)


State 86

   48 order_by_stmt: "ORDER" . "BY" order_by_fields

    "BY"  shift, and go to state 93


State 87

    1 query: select_stmt from_stmt where_stmt group_by_stmt having_stmt order_by_stmt .

    $default  reduce using rule 1 (query)


State 88

   12 from_stmt: "FROM" "(" "string" "," "string" ")" .

    $default  reduce using rule 12 (from_stmt)


State 89

   26 boolean_expr: "identifier" "IS" "NOT" "NULL" .

    $default  reduce using rule 26 (boolean_expr)


State 90

   33 expr: fn1 "(" expr ")" .

    $default  reduce using rule 33 (expr)


State 91

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   34     | fn3 "(" expr "," . expr "," expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 94


State 92

   43 group_by_fields: group_by_fields "," . group_by_field
   44 group_by_field: . "identifier"

    "identifier"  shift, and go to state 82

    group_by_field  go to state 95


State 93

   48 order_by_stmt: "ORDER" "BY" . order_by_fields
   49 order_by_fields: . order_by_field
   50                | . order_by_fields "," order_by_field
   51 order_by_field: . "identifier"

    "identifier"  shift, and go to state 96

    order_by_fields  go to state 97
    order_by_field   go to state 98


State 94

   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr
   34     | fn3 "(" expr "," expr . "," expr ")"

    ","  shift, and go to state 99
    "+"  shift, and go to state 47
    "-"  shift, and go to state 48
    "*"  shift, and go to state 49
    "/"  shift, and go to state 50


State 95

   43 group_by_fields: group_by_fields "," group_by_field .

    $default  reduce using rule 43 (group_by_fields)


State 96

   51 order_by_field: "identifier" .

    $default  reduce using rule 51 (order_by_field)


State 97

   48 order_by_stmt: "ORDER" "BY" order_by_fields .  ["end of file"]
   50 order_by_fields: order_by_fields . "," order_by_field

    ","  shift, and go to state 100

    $default  reduce using rule 48 (order_by_stmt)


State 98

   49 order_by_fields: order_by_field .

    $default  reduce using rule 49 (order_by_fields)


State 99

    2 fn1: . "STR"
    3    | . "INT"
    4    | . "SUM"
    5    | . "COUNT"
    6 fn3: . "SUBSTR"
   27 expr: . "(" expr ")"
   28     | . expr "+" expr
   29     | . expr "-" expr
   30     | . expr "*" expr
   31     | . expr "/" expr
   32     | . "-" expr
   33     | . fn1 "(" expr ")"
   34     | . fn3 "(" expr "," expr "," expr ")"
   34     | fn3 "(" expr "," expr "," . expr ")"
   35     | . "identifier"
   36     | . "string"
   37     | . "long"
   38     | . "double"
   39     | . "bool"

    "-"           shift, and go to state 18
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 38
    "string"      shift, and go to state 21
    "long"        shift, and go to state 22
    "double"      shift, and go to state 23
    "bool"        shift, and go to state 24
    "STR"         shift, and go to state 25
    "INT"         shift, and go to state 26
    "SUM"         shift, and go to state 27
    "COUNT"       shift, and go to state 28
    "SUBSTR"      shift, and go to state 29

    fn1   go to state 30
    fn3   go to state 31
    expr  go to state 101


State 100

   50 order_by_fields: order_by_fields "," . order_by_field
   51 order_by_field: . "identifier"

    "identifier"  shift, and go to state 96

    order_by_field  go to state 102


State 101

   28 expr: expr . "+" expr
   29     | expr . "-" expr
   30     | expr . "*" expr
   31     | expr . "/" expr
   34     | fn3 "(" expr "," expr "," expr . ")"

    "+"  shift, and go to state 47
    "-"  shift, and go to state 48
    "*"  shift, and go to state 49
    "/"  shift, and go to state 50
    ")"  shift, and go to state 103


State 102

   50 order_by_fields: order_by_fields "," order_by_field .

    $default  reduce using rule 50 (order_by_fields)


State 103

   34 expr: fn3 "(" expr "," expr "," expr ")" .

    $default  reduce using rule 34 (expr)
